{"version":3,"names":["qrcode","typeNumber","errorCorrectionLevel","PAD0","PAD1","_typeNumber","_errorCorrectionLevel","QRErrorCorrectionLevel","_modules","_moduleCount","_dataCache","_dataList","_this","makeImpl","test","maskPattern","moduleCount","modules","Array","row","col","setupPositionProbePattern","setupPositionAdjustPattern","setupTimingPattern","setupTypeInfo","setupTypeNumber","createData","mapData","r","c","getBestMaskPattern","minLostPoint","pattern","i","lostPoint","QRUtil","getLostPoint","pos","getPatternPosition","length","j","bits","getBCHTypeNumber","mod","Math","floor","data","getBCHTypeInfo","inc","bitIndex","byteIndex","maskFunc","getMaskFunction","dark","mask","createBytes","buffer","rsBlocks","offset","maxDcCount","maxEcCount","dcdata","ecdata","dcCount","dataCount","ecCount","totalCount","max","getBuffer","rsPoly","getErrorCorrectPolynomial","rawPoly","qrPolynomial","getLength","modPoly","modIndex","getAt","totalCodeCount","index","dataList","QRRSBlock","getRSBlocks","qrBitBuffer","put","getMode","getLengthInBits","write","totalDataCount","putBit","addData","mode","newData","qrNumber","qrAlphaNum","qr8BitByte","qrKanji","push","isDark","getModuleCount","make","createTableTag","cellSize","margin","qrHtml","createSvgTag","alt","title","opts","arguments","text","id","size","mc","mr","qrSvg","rect","scalable","escapeXml","join","trim","createDataURL","min","x","y","createImgTag","img","s","escaped","charAt","_createHalfASCII","r1","r2","p","blocks","blocksLastLineNoMargin","ascii","substring","createASCII","white","black","line","renderTo2dContext","context","fillStyle","fillRect","stringToBytesFuncs","default","bytes","charCodeAt","stringToBytes","createStringToBytes","unicodeData","numChars","unicodeMap","bin","base64DecodeInputStream","read","b","count","b0","b1","b2","b3","k","String","fromCharCode","v","unknownChar","QRMode","MODE_NUMBER","MODE_ALPHA_NUM","MODE_8BIT_BYTE","MODE_KANJI","L","M","Q","H","QRMaskPattern","PATTERN000","PATTERN001","PATTERN010","PATTERN011","PATTERN100","PATTERN101","PATTERN110","PATTERN111","PATTERN_POSITION_TABLE","G15","G18","G15_MASK","getBCHDigit","digit","d","errorCorrectLength","a","multiply","QRMath","gexp","type","sameCount","darkCount","ratio","abs","EXP_TABLE","LOG_TABLE","glog","n","num","shift","_num","e","RS_BLOCK_TABLE","qrRSBlock","getRsBlockTable","undefined","rsBlock","list","_buffer","_length","bufIndex","bit","_mode","_data","strToNum","chatToNum","getCode","_bytes","code","byteArrayOutputStream","writeByte","writeShort","writeBytes","off","len","writeString","toByteArray","toString","base64EncodeOutputStream","_buflen","_base64","writeEncoded","encode","flush","padlen","str","_str","_pos","match","decode","gifImage","width","height","_width","_height","setPixel","pixel","out","lzwMinCodeSize","raster","getLZWRaster","bitOutputStream","_out","_bitLength","_bitBuffer","clearCode","endCode","bitLength","table","lzwTable","add","byteOut","bitOut","dataIndex","contains","indexOf","_map","_size","key","getPixel","gif","base64","toUTF8Array","utf8","charcode","factory","module","exports","OutputMode","ErrorCorrectionLevel","qrCodeCss","QrCodeStyle0","appendAttribute","attributeName","attributeValue","nodeAsString","mutatedNodeAsString","replace","QRCodeWebComponent","High","DataURI","componentWillLoad","this","computeAndSetData","contents","outputMode","qr","changeOutputModeHandler","newValue","changeContentsHandler","console","log","changeErrorCorrectionLevelHandler","render","h","innerHTML"],"sources":["node_modules/qrcode-generator/qrcode.js","src/components/qr-code/enums.ts","src/components/qr-code/qr-code.scss?tag=qr-code&encapsulation=shadow","src/components/qr-code/qr-code.tsx"],"sourcesContent":["//---------------------------------------------------------------------\n//\n// QR Code Generator for JavaScript\n//\n// Copyright (c) 2009 Kazuhiko Arase\n//\n// URL: http://www.d-project.com/\n//\n// Licensed under the MIT license:\n//  http://www.opensource.org/licenses/mit-license.php\n//\n// The word 'QR Code' is registered trademark of\n// DENSO WAVE INCORPORATED\n//  http://www.denso-wave.com/qrcode/faqpatent-e.html\n//\n//---------------------------------------------------------------------\n\nvar qrcode = function() {\n\n  //---------------------------------------------------------------------\n  // qrcode\n  //---------------------------------------------------------------------\n\n  /**\n   * qrcode\n   * @param typeNumber 1 to 40\n   * @param errorCorrectionLevel 'L','M','Q','H'\n   */\n  var qrcode = function(typeNumber, errorCorrectionLevel) {\n\n    var PAD0 = 0xEC;\n    var PAD1 = 0x11;\n\n    var _typeNumber = typeNumber;\n    var _errorCorrectionLevel = QRErrorCorrectionLevel[errorCorrectionLevel];\n    var _modules = null;\n    var _moduleCount = 0;\n    var _dataCache = null;\n    var _dataList = [];\n\n    var _this = {};\n\n    var makeImpl = function(test, maskPattern) {\n\n      _moduleCount = _typeNumber * 4 + 17;\n      _modules = function(moduleCount) {\n        var modules = new Array(moduleCount);\n        for (var row = 0; row < moduleCount; row += 1) {\n          modules[row] = new Array(moduleCount);\n          for (var col = 0; col < moduleCount; col += 1) {\n            modules[row][col] = null;\n          }\n        }\n        return modules;\n      }(_moduleCount);\n\n      setupPositionProbePattern(0, 0);\n      setupPositionProbePattern(_moduleCount - 7, 0);\n      setupPositionProbePattern(0, _moduleCount - 7);\n      setupPositionAdjustPattern();\n      setupTimingPattern();\n      setupTypeInfo(test, maskPattern);\n\n      if (_typeNumber >= 7) {\n        setupTypeNumber(test);\n      }\n\n      if (_dataCache == null) {\n        _dataCache = createData(_typeNumber, _errorCorrectionLevel, _dataList);\n      }\n\n      mapData(_dataCache, maskPattern);\n    };\n\n    var setupPositionProbePattern = function(row, col) {\n\n      for (var r = -1; r <= 7; r += 1) {\n\n        if (row + r <= -1 || _moduleCount <= row + r) continue;\n\n        for (var c = -1; c <= 7; c += 1) {\n\n          if (col + c <= -1 || _moduleCount <= col + c) continue;\n\n          if ( (0 <= r && r <= 6 && (c == 0 || c == 6) )\n              || (0 <= c && c <= 6 && (r == 0 || r == 6) )\n              || (2 <= r && r <= 4 && 2 <= c && c <= 4) ) {\n            _modules[row + r][col + c] = true;\n          } else {\n            _modules[row + r][col + c] = false;\n          }\n        }\n      }\n    };\n\n    var getBestMaskPattern = function() {\n\n      var minLostPoint = 0;\n      var pattern = 0;\n\n      for (var i = 0; i < 8; i += 1) {\n\n        makeImpl(true, i);\n\n        var lostPoint = QRUtil.getLostPoint(_this);\n\n        if (i == 0 || minLostPoint > lostPoint) {\n          minLostPoint = lostPoint;\n          pattern = i;\n        }\n      }\n\n      return pattern;\n    };\n\n    var setupTimingPattern = function() {\n\n      for (var r = 8; r < _moduleCount - 8; r += 1) {\n        if (_modules[r][6] != null) {\n          continue;\n        }\n        _modules[r][6] = (r % 2 == 0);\n      }\n\n      for (var c = 8; c < _moduleCount - 8; c += 1) {\n        if (_modules[6][c] != null) {\n          continue;\n        }\n        _modules[6][c] = (c % 2 == 0);\n      }\n    };\n\n    var setupPositionAdjustPattern = function() {\n\n      var pos = QRUtil.getPatternPosition(_typeNumber);\n\n      for (var i = 0; i < pos.length; i += 1) {\n\n        for (var j = 0; j < pos.length; j += 1) {\n\n          var row = pos[i];\n          var col = pos[j];\n\n          if (_modules[row][col] != null) {\n            continue;\n          }\n\n          for (var r = -2; r <= 2; r += 1) {\n\n            for (var c = -2; c <= 2; c += 1) {\n\n              if (r == -2 || r == 2 || c == -2 || c == 2\n                  || (r == 0 && c == 0) ) {\n                _modules[row + r][col + c] = true;\n              } else {\n                _modules[row + r][col + c] = false;\n              }\n            }\n          }\n        }\n      }\n    };\n\n    var setupTypeNumber = function(test) {\n\n      var bits = QRUtil.getBCHTypeNumber(_typeNumber);\n\n      for (var i = 0; i < 18; i += 1) {\n        var mod = (!test && ( (bits >> i) & 1) == 1);\n        _modules[Math.floor(i / 3)][i % 3 + _moduleCount - 8 - 3] = mod;\n      }\n\n      for (var i = 0; i < 18; i += 1) {\n        var mod = (!test && ( (bits >> i) & 1) == 1);\n        _modules[i % 3 + _moduleCount - 8 - 3][Math.floor(i / 3)] = mod;\n      }\n    };\n\n    var setupTypeInfo = function(test, maskPattern) {\n\n      var data = (_errorCorrectionLevel << 3) | maskPattern;\n      var bits = QRUtil.getBCHTypeInfo(data);\n\n      // vertical\n      for (var i = 0; i < 15; i += 1) {\n\n        var mod = (!test && ( (bits >> i) & 1) == 1);\n\n        if (i < 6) {\n          _modules[i][8] = mod;\n        } else if (i < 8) {\n          _modules[i + 1][8] = mod;\n        } else {\n          _modules[_moduleCount - 15 + i][8] = mod;\n        }\n      }\n\n      // horizontal\n      for (var i = 0; i < 15; i += 1) {\n\n        var mod = (!test && ( (bits >> i) & 1) == 1);\n\n        if (i < 8) {\n          _modules[8][_moduleCount - i - 1] = mod;\n        } else if (i < 9) {\n          _modules[8][15 - i - 1 + 1] = mod;\n        } else {\n          _modules[8][15 - i - 1] = mod;\n        }\n      }\n\n      // fixed module\n      _modules[_moduleCount - 8][8] = (!test);\n    };\n\n    var mapData = function(data, maskPattern) {\n\n      var inc = -1;\n      var row = _moduleCount - 1;\n      var bitIndex = 7;\n      var byteIndex = 0;\n      var maskFunc = QRUtil.getMaskFunction(maskPattern);\n\n      for (var col = _moduleCount - 1; col > 0; col -= 2) {\n\n        if (col == 6) col -= 1;\n\n        while (true) {\n\n          for (var c = 0; c < 2; c += 1) {\n\n            if (_modules[row][col - c] == null) {\n\n              var dark = false;\n\n              if (byteIndex < data.length) {\n                dark = ( ( (data[byteIndex] >>> bitIndex) & 1) == 1);\n              }\n\n              var mask = maskFunc(row, col - c);\n\n              if (mask) {\n                dark = !dark;\n              }\n\n              _modules[row][col - c] = dark;\n              bitIndex -= 1;\n\n              if (bitIndex == -1) {\n                byteIndex += 1;\n                bitIndex = 7;\n              }\n            }\n          }\n\n          row += inc;\n\n          if (row < 0 || _moduleCount <= row) {\n            row -= inc;\n            inc = -inc;\n            break;\n          }\n        }\n      }\n    };\n\n    var createBytes = function(buffer, rsBlocks) {\n\n      var offset = 0;\n\n      var maxDcCount = 0;\n      var maxEcCount = 0;\n\n      var dcdata = new Array(rsBlocks.length);\n      var ecdata = new Array(rsBlocks.length);\n\n      for (var r = 0; r < rsBlocks.length; r += 1) {\n\n        var dcCount = rsBlocks[r].dataCount;\n        var ecCount = rsBlocks[r].totalCount - dcCount;\n\n        maxDcCount = Math.max(maxDcCount, dcCount);\n        maxEcCount = Math.max(maxEcCount, ecCount);\n\n        dcdata[r] = new Array(dcCount);\n\n        for (var i = 0; i < dcdata[r].length; i += 1) {\n          dcdata[r][i] = 0xff & buffer.getBuffer()[i + offset];\n        }\n        offset += dcCount;\n\n        var rsPoly = QRUtil.getErrorCorrectPolynomial(ecCount);\n        var rawPoly = qrPolynomial(dcdata[r], rsPoly.getLength() - 1);\n\n        var modPoly = rawPoly.mod(rsPoly);\n        ecdata[r] = new Array(rsPoly.getLength() - 1);\n        for (var i = 0; i < ecdata[r].length; i += 1) {\n          var modIndex = i + modPoly.getLength() - ecdata[r].length;\n          ecdata[r][i] = (modIndex >= 0)? modPoly.getAt(modIndex) : 0;\n        }\n      }\n\n      var totalCodeCount = 0;\n      for (var i = 0; i < rsBlocks.length; i += 1) {\n        totalCodeCount += rsBlocks[i].totalCount;\n      }\n\n      var data = new Array(totalCodeCount);\n      var index = 0;\n\n      for (var i = 0; i < maxDcCount; i += 1) {\n        for (var r = 0; r < rsBlocks.length; r += 1) {\n          if (i < dcdata[r].length) {\n            data[index] = dcdata[r][i];\n            index += 1;\n          }\n        }\n      }\n\n      for (var i = 0; i < maxEcCount; i += 1) {\n        for (var r = 0; r < rsBlocks.length; r += 1) {\n          if (i < ecdata[r].length) {\n            data[index] = ecdata[r][i];\n            index += 1;\n          }\n        }\n      }\n\n      return data;\n    };\n\n    var createData = function(typeNumber, errorCorrectionLevel, dataList) {\n\n      var rsBlocks = QRRSBlock.getRSBlocks(typeNumber, errorCorrectionLevel);\n\n      var buffer = qrBitBuffer();\n\n      for (var i = 0; i < dataList.length; i += 1) {\n        var data = dataList[i];\n        buffer.put(data.getMode(), 4);\n        buffer.put(data.getLength(), QRUtil.getLengthInBits(data.getMode(), typeNumber) );\n        data.write(buffer);\n      }\n\n      // calc num max data.\n      var totalDataCount = 0;\n      for (var i = 0; i < rsBlocks.length; i += 1) {\n        totalDataCount += rsBlocks[i].dataCount;\n      }\n\n      if (buffer.getLengthInBits() > totalDataCount * 8) {\n        throw 'code length overflow. ('\n          + buffer.getLengthInBits()\n          + '>'\n          + totalDataCount * 8\n          + ')';\n      }\n\n      // end code\n      if (buffer.getLengthInBits() + 4 <= totalDataCount * 8) {\n        buffer.put(0, 4);\n      }\n\n      // padding\n      while (buffer.getLengthInBits() % 8 != 0) {\n        buffer.putBit(false);\n      }\n\n      // padding\n      while (true) {\n\n        if (buffer.getLengthInBits() >= totalDataCount * 8) {\n          break;\n        }\n        buffer.put(PAD0, 8);\n\n        if (buffer.getLengthInBits() >= totalDataCount * 8) {\n          break;\n        }\n        buffer.put(PAD1, 8);\n      }\n\n      return createBytes(buffer, rsBlocks);\n    };\n\n    _this.addData = function(data, mode) {\n\n      mode = mode || 'Byte';\n\n      var newData = null;\n\n      switch(mode) {\n      case 'Numeric' :\n        newData = qrNumber(data);\n        break;\n      case 'Alphanumeric' :\n        newData = qrAlphaNum(data);\n        break;\n      case 'Byte' :\n        newData = qr8BitByte(data);\n        break;\n      case 'Kanji' :\n        newData = qrKanji(data);\n        break;\n      default :\n        throw 'mode:' + mode;\n      }\n\n      _dataList.push(newData);\n      _dataCache = null;\n    };\n\n    _this.isDark = function(row, col) {\n      if (row < 0 || _moduleCount <= row || col < 0 || _moduleCount <= col) {\n        throw row + ',' + col;\n      }\n      return _modules[row][col];\n    };\n\n    _this.getModuleCount = function() {\n      return _moduleCount;\n    };\n\n    _this.make = function() {\n      if (_typeNumber < 1) {\n        var typeNumber = 1;\n\n        for (; typeNumber < 40; typeNumber++) {\n          var rsBlocks = QRRSBlock.getRSBlocks(typeNumber, _errorCorrectionLevel);\n          var buffer = qrBitBuffer();\n\n          for (var i = 0; i < _dataList.length; i++) {\n            var data = _dataList[i];\n            buffer.put(data.getMode(), 4);\n            buffer.put(data.getLength(), QRUtil.getLengthInBits(data.getMode(), typeNumber) );\n            data.write(buffer);\n          }\n\n          var totalDataCount = 0;\n          for (var i = 0; i < rsBlocks.length; i++) {\n            totalDataCount += rsBlocks[i].dataCount;\n          }\n\n          if (buffer.getLengthInBits() <= totalDataCount * 8) {\n            break;\n          }\n        }\n\n        _typeNumber = typeNumber;\n      }\n\n      makeImpl(false, getBestMaskPattern() );\n    };\n\n    _this.createTableTag = function(cellSize, margin) {\n\n      cellSize = cellSize || 2;\n      margin = (typeof margin == 'undefined')? cellSize * 4 : margin;\n\n      var qrHtml = '';\n\n      qrHtml += '<table style=\"';\n      qrHtml += ' border-width: 0px; border-style: none;';\n      qrHtml += ' border-collapse: collapse;';\n      qrHtml += ' padding: 0px; margin: ' + margin + 'px;';\n      qrHtml += '\">';\n      qrHtml += '<tbody>';\n\n      for (var r = 0; r < _this.getModuleCount(); r += 1) {\n\n        qrHtml += '<tr>';\n\n        for (var c = 0; c < _this.getModuleCount(); c += 1) {\n          qrHtml += '<td style=\"';\n          qrHtml += ' border-width: 0px; border-style: none;';\n          qrHtml += ' border-collapse: collapse;';\n          qrHtml += ' padding: 0px; margin: 0px;';\n          qrHtml += ' width: ' + cellSize + 'px;';\n          qrHtml += ' height: ' + cellSize + 'px;';\n          qrHtml += ' background-color: ';\n          qrHtml += _this.isDark(r, c)? '#000000' : '#ffffff';\n          qrHtml += ';';\n          qrHtml += '\"/>';\n        }\n\n        qrHtml += '</tr>';\n      }\n\n      qrHtml += '</tbody>';\n      qrHtml += '</table>';\n\n      return qrHtml;\n    };\n\n    _this.createSvgTag = function(cellSize, margin, alt, title) {\n\n      var opts = {};\n      if (typeof arguments[0] == 'object') {\n        // Called by options.\n        opts = arguments[0];\n        // overwrite cellSize and margin.\n        cellSize = opts.cellSize;\n        margin = opts.margin;\n        alt = opts.alt;\n        title = opts.title;\n      }\n\n      cellSize = cellSize || 2;\n      margin = (typeof margin == 'undefined')? cellSize * 4 : margin;\n\n      // Compose alt property surrogate\n      alt = (typeof alt === 'string') ? {text: alt} : alt || {};\n      alt.text = alt.text || null;\n      alt.id = (alt.text) ? alt.id || 'qrcode-description' : null;\n\n      // Compose title property surrogate\n      title = (typeof title === 'string') ? {text: title} : title || {};\n      title.text = title.text || null;\n      title.id = (title.text) ? title.id || 'qrcode-title' : null;\n\n      var size = _this.getModuleCount() * cellSize + margin * 2;\n      var c, mc, r, mr, qrSvg='', rect;\n\n      rect = 'l' + cellSize + ',0 0,' + cellSize +\n        ' -' + cellSize + ',0 0,-' + cellSize + 'z ';\n\n      qrSvg += '<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"';\n      qrSvg += !opts.scalable ? ' width=\"' + size + 'px\" height=\"' + size + 'px\"' : '';\n      qrSvg += ' viewBox=\"0 0 ' + size + ' ' + size + '\" ';\n      qrSvg += ' preserveAspectRatio=\"xMinYMin meet\"';\n      qrSvg += (title.text || alt.text) ? ' role=\"img\" aria-labelledby=\"' +\n          escapeXml([title.id, alt.id].join(' ').trim() ) + '\"' : '';\n      qrSvg += '>';\n      qrSvg += (title.text) ? '<title id=\"' + escapeXml(title.id) + '\">' +\n          escapeXml(title.text) + '</title>' : '';\n      qrSvg += (alt.text) ? '<description id=\"' + escapeXml(alt.id) + '\">' +\n          escapeXml(alt.text) + '</description>' : '';\n      qrSvg += '<rect width=\"100%\" height=\"100%\" fill=\"white\" cx=\"0\" cy=\"0\"/>';\n      qrSvg += '<path d=\"';\n\n      for (r = 0; r < _this.getModuleCount(); r += 1) {\n        mr = r * cellSize + margin;\n        for (c = 0; c < _this.getModuleCount(); c += 1) {\n          if (_this.isDark(r, c) ) {\n            mc = c*cellSize+margin;\n            qrSvg += 'M' + mc + ',' + mr + rect;\n          }\n        }\n      }\n\n      qrSvg += '\" stroke=\"transparent\" fill=\"black\"/>';\n      qrSvg += '</svg>';\n\n      return qrSvg;\n    };\n\n    _this.createDataURL = function(cellSize, margin) {\n\n      cellSize = cellSize || 2;\n      margin = (typeof margin == 'undefined')? cellSize * 4 : margin;\n\n      var size = _this.getModuleCount() * cellSize + margin * 2;\n      var min = margin;\n      var max = size - margin;\n\n      return createDataURL(size, size, function(x, y) {\n        if (min <= x && x < max && min <= y && y < max) {\n          var c = Math.floor( (x - min) / cellSize);\n          var r = Math.floor( (y - min) / cellSize);\n          return _this.isDark(r, c)? 0 : 1;\n        } else {\n          return 1;\n        }\n      } );\n    };\n\n    _this.createImgTag = function(cellSize, margin, alt) {\n\n      cellSize = cellSize || 2;\n      margin = (typeof margin == 'undefined')? cellSize * 4 : margin;\n\n      var size = _this.getModuleCount() * cellSize + margin * 2;\n\n      var img = '';\n      img += '<img';\n      img += '\\u0020src=\"';\n      img += _this.createDataURL(cellSize, margin);\n      img += '\"';\n      img += '\\u0020width=\"';\n      img += size;\n      img += '\"';\n      img += '\\u0020height=\"';\n      img += size;\n      img += '\"';\n      if (alt) {\n        img += '\\u0020alt=\"';\n        img += escapeXml(alt);\n        img += '\"';\n      }\n      img += '/>';\n\n      return img;\n    };\n\n    var escapeXml = function(s) {\n      var escaped = '';\n      for (var i = 0; i < s.length; i += 1) {\n        var c = s.charAt(i);\n        switch(c) {\n        case '<': escaped += '&lt;'; break;\n        case '>': escaped += '&gt;'; break;\n        case '&': escaped += '&amp;'; break;\n        case '\"': escaped += '&quot;'; break;\n        default : escaped += c; break;\n        }\n      }\n      return escaped;\n    };\n\n    var _createHalfASCII = function(margin) {\n      var cellSize = 1;\n      margin = (typeof margin == 'undefined')? cellSize * 2 : margin;\n\n      var size = _this.getModuleCount() * cellSize + margin * 2;\n      var min = margin;\n      var max = size - margin;\n\n      var y, x, r1, r2, p;\n\n      var blocks = {\n        '██': '█',\n        '█ ': '▀',\n        ' █': '▄',\n        '  ': ' '\n      };\n\n      var blocksLastLineNoMargin = {\n        '██': '▀',\n        '█ ': '▀',\n        ' █': ' ',\n        '  ': ' '\n      };\n\n      var ascii = '';\n      for (y = 0; y < size; y += 2) {\n        r1 = Math.floor((y - min) / cellSize);\n        r2 = Math.floor((y + 1 - min) / cellSize);\n        for (x = 0; x < size; x += 1) {\n          p = '█';\n\n          if (min <= x && x < max && min <= y && y < max && _this.isDark(r1, Math.floor((x - min) / cellSize))) {\n            p = ' ';\n          }\n\n          if (min <= x && x < max && min <= y+1 && y+1 < max && _this.isDark(r2, Math.floor((x - min) / cellSize))) {\n            p += ' ';\n          }\n          else {\n            p += '█';\n          }\n\n          // Output 2 characters per pixel, to create full square. 1 character per pixels gives only half width of square.\n          ascii += (margin < 1 && y+1 >= max) ? blocksLastLineNoMargin[p] : blocks[p];\n        }\n\n        ascii += '\\n';\n      }\n\n      if (size % 2 && margin > 0) {\n        return ascii.substring(0, ascii.length - size - 1) + Array(size+1).join('▀');\n      }\n\n      return ascii.substring(0, ascii.length-1);\n    };\n\n    _this.createASCII = function(cellSize, margin) {\n      cellSize = cellSize || 1;\n\n      if (cellSize < 2) {\n        return _createHalfASCII(margin);\n      }\n\n      cellSize -= 1;\n      margin = (typeof margin == 'undefined')? cellSize * 2 : margin;\n\n      var size = _this.getModuleCount() * cellSize + margin * 2;\n      var min = margin;\n      var max = size - margin;\n\n      var y, x, r, p;\n\n      var white = Array(cellSize+1).join('██');\n      var black = Array(cellSize+1).join('  ');\n\n      var ascii = '';\n      var line = '';\n      for (y = 0; y < size; y += 1) {\n        r = Math.floor( (y - min) / cellSize);\n        line = '';\n        for (x = 0; x < size; x += 1) {\n          p = 1;\n\n          if (min <= x && x < max && min <= y && y < max && _this.isDark(r, Math.floor((x - min) / cellSize))) {\n            p = 0;\n          }\n\n          // Output 2 characters per pixel, to create full square. 1 character per pixels gives only half width of square.\n          line += p ? white : black;\n        }\n\n        for (r = 0; r < cellSize; r += 1) {\n          ascii += line + '\\n';\n        }\n      }\n\n      return ascii.substring(0, ascii.length-1);\n    };\n\n    _this.renderTo2dContext = function(context, cellSize) {\n      cellSize = cellSize || 2;\n      var length = _this.getModuleCount();\n      for (var row = 0; row < length; row++) {\n        for (var col = 0; col < length; col++) {\n          context.fillStyle = _this.isDark(row, col) ? 'black' : 'white';\n          context.fillRect(row * cellSize, col * cellSize, cellSize, cellSize);\n        }\n      }\n    }\n\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // qrcode.stringToBytes\n  //---------------------------------------------------------------------\n\n  qrcode.stringToBytesFuncs = {\n    'default' : function(s) {\n      var bytes = [];\n      for (var i = 0; i < s.length; i += 1) {\n        var c = s.charCodeAt(i);\n        bytes.push(c & 0xff);\n      }\n      return bytes;\n    }\n  };\n\n  qrcode.stringToBytes = qrcode.stringToBytesFuncs['default'];\n\n  //---------------------------------------------------------------------\n  // qrcode.createStringToBytes\n  //---------------------------------------------------------------------\n\n  /**\n   * @param unicodeData base64 string of byte array.\n   * [16bit Unicode],[16bit Bytes], ...\n   * @param numChars\n   */\n  qrcode.createStringToBytes = function(unicodeData, numChars) {\n\n    // create conversion map.\n\n    var unicodeMap = function() {\n\n      var bin = base64DecodeInputStream(unicodeData);\n      var read = function() {\n        var b = bin.read();\n        if (b == -1) throw 'eof';\n        return b;\n      };\n\n      var count = 0;\n      var unicodeMap = {};\n      while (true) {\n        var b0 = bin.read();\n        if (b0 == -1) break;\n        var b1 = read();\n        var b2 = read();\n        var b3 = read();\n        var k = String.fromCharCode( (b0 << 8) | b1);\n        var v = (b2 << 8) | b3;\n        unicodeMap[k] = v;\n        count += 1;\n      }\n      if (count != numChars) {\n        throw count + ' != ' + numChars;\n      }\n\n      return unicodeMap;\n    }();\n\n    var unknownChar = '?'.charCodeAt(0);\n\n    return function(s) {\n      var bytes = [];\n      for (var i = 0; i < s.length; i += 1) {\n        var c = s.charCodeAt(i);\n        if (c < 128) {\n          bytes.push(c);\n        } else {\n          var b = unicodeMap[s.charAt(i)];\n          if (typeof b == 'number') {\n            if ( (b & 0xff) == b) {\n              // 1byte\n              bytes.push(b);\n            } else {\n              // 2bytes\n              bytes.push(b >>> 8);\n              bytes.push(b & 0xff);\n            }\n          } else {\n            bytes.push(unknownChar);\n          }\n        }\n      }\n      return bytes;\n    };\n  };\n\n  //---------------------------------------------------------------------\n  // QRMode\n  //---------------------------------------------------------------------\n\n  var QRMode = {\n    MODE_NUMBER :    1 << 0,\n    MODE_ALPHA_NUM : 1 << 1,\n    MODE_8BIT_BYTE : 1 << 2,\n    MODE_KANJI :     1 << 3\n  };\n\n  //---------------------------------------------------------------------\n  // QRErrorCorrectionLevel\n  //---------------------------------------------------------------------\n\n  var QRErrorCorrectionLevel = {\n    L : 1,\n    M : 0,\n    Q : 3,\n    H : 2\n  };\n\n  //---------------------------------------------------------------------\n  // QRMaskPattern\n  //---------------------------------------------------------------------\n\n  var QRMaskPattern = {\n    PATTERN000 : 0,\n    PATTERN001 : 1,\n    PATTERN010 : 2,\n    PATTERN011 : 3,\n    PATTERN100 : 4,\n    PATTERN101 : 5,\n    PATTERN110 : 6,\n    PATTERN111 : 7\n  };\n\n  //---------------------------------------------------------------------\n  // QRUtil\n  //---------------------------------------------------------------------\n\n  var QRUtil = function() {\n\n    var PATTERN_POSITION_TABLE = [\n      [],\n      [6, 18],\n      [6, 22],\n      [6, 26],\n      [6, 30],\n      [6, 34],\n      [6, 22, 38],\n      [6, 24, 42],\n      [6, 26, 46],\n      [6, 28, 50],\n      [6, 30, 54],\n      [6, 32, 58],\n      [6, 34, 62],\n      [6, 26, 46, 66],\n      [6, 26, 48, 70],\n      [6, 26, 50, 74],\n      [6, 30, 54, 78],\n      [6, 30, 56, 82],\n      [6, 30, 58, 86],\n      [6, 34, 62, 90],\n      [6, 28, 50, 72, 94],\n      [6, 26, 50, 74, 98],\n      [6, 30, 54, 78, 102],\n      [6, 28, 54, 80, 106],\n      [6, 32, 58, 84, 110],\n      [6, 30, 58, 86, 114],\n      [6, 34, 62, 90, 118],\n      [6, 26, 50, 74, 98, 122],\n      [6, 30, 54, 78, 102, 126],\n      [6, 26, 52, 78, 104, 130],\n      [6, 30, 56, 82, 108, 134],\n      [6, 34, 60, 86, 112, 138],\n      [6, 30, 58, 86, 114, 142],\n      [6, 34, 62, 90, 118, 146],\n      [6, 30, 54, 78, 102, 126, 150],\n      [6, 24, 50, 76, 102, 128, 154],\n      [6, 28, 54, 80, 106, 132, 158],\n      [6, 32, 58, 84, 110, 136, 162],\n      [6, 26, 54, 82, 110, 138, 166],\n      [6, 30, 58, 86, 114, 142, 170]\n    ];\n    var G15 = (1 << 10) | (1 << 8) | (1 << 5) | (1 << 4) | (1 << 2) | (1 << 1) | (1 << 0);\n    var G18 = (1 << 12) | (1 << 11) | (1 << 10) | (1 << 9) | (1 << 8) | (1 << 5) | (1 << 2) | (1 << 0);\n    var G15_MASK = (1 << 14) | (1 << 12) | (1 << 10) | (1 << 4) | (1 << 1);\n\n    var _this = {};\n\n    var getBCHDigit = function(data) {\n      var digit = 0;\n      while (data != 0) {\n        digit += 1;\n        data >>>= 1;\n      }\n      return digit;\n    };\n\n    _this.getBCHTypeInfo = function(data) {\n      var d = data << 10;\n      while (getBCHDigit(d) - getBCHDigit(G15) >= 0) {\n        d ^= (G15 << (getBCHDigit(d) - getBCHDigit(G15) ) );\n      }\n      return ( (data << 10) | d) ^ G15_MASK;\n    };\n\n    _this.getBCHTypeNumber = function(data) {\n      var d = data << 12;\n      while (getBCHDigit(d) - getBCHDigit(G18) >= 0) {\n        d ^= (G18 << (getBCHDigit(d) - getBCHDigit(G18) ) );\n      }\n      return (data << 12) | d;\n    };\n\n    _this.getPatternPosition = function(typeNumber) {\n      return PATTERN_POSITION_TABLE[typeNumber - 1];\n    };\n\n    _this.getMaskFunction = function(maskPattern) {\n\n      switch (maskPattern) {\n\n      case QRMaskPattern.PATTERN000 :\n        return function(i, j) { return (i + j) % 2 == 0; };\n      case QRMaskPattern.PATTERN001 :\n        return function(i, j) { return i % 2 == 0; };\n      case QRMaskPattern.PATTERN010 :\n        return function(i, j) { return j % 3 == 0; };\n      case QRMaskPattern.PATTERN011 :\n        return function(i, j) { return (i + j) % 3 == 0; };\n      case QRMaskPattern.PATTERN100 :\n        return function(i, j) { return (Math.floor(i / 2) + Math.floor(j / 3) ) % 2 == 0; };\n      case QRMaskPattern.PATTERN101 :\n        return function(i, j) { return (i * j) % 2 + (i * j) % 3 == 0; };\n      case QRMaskPattern.PATTERN110 :\n        return function(i, j) { return ( (i * j) % 2 + (i * j) % 3) % 2 == 0; };\n      case QRMaskPattern.PATTERN111 :\n        return function(i, j) { return ( (i * j) % 3 + (i + j) % 2) % 2 == 0; };\n\n      default :\n        throw 'bad maskPattern:' + maskPattern;\n      }\n    };\n\n    _this.getErrorCorrectPolynomial = function(errorCorrectLength) {\n      var a = qrPolynomial([1], 0);\n      for (var i = 0; i < errorCorrectLength; i += 1) {\n        a = a.multiply(qrPolynomial([1, QRMath.gexp(i)], 0) );\n      }\n      return a;\n    };\n\n    _this.getLengthInBits = function(mode, type) {\n\n      if (1 <= type && type < 10) {\n\n        // 1 - 9\n\n        switch(mode) {\n        case QRMode.MODE_NUMBER    : return 10;\n        case QRMode.MODE_ALPHA_NUM : return 9;\n        case QRMode.MODE_8BIT_BYTE : return 8;\n        case QRMode.MODE_KANJI     : return 8;\n        default :\n          throw 'mode:' + mode;\n        }\n\n      } else if (type < 27) {\n\n        // 10 - 26\n\n        switch(mode) {\n        case QRMode.MODE_NUMBER    : return 12;\n        case QRMode.MODE_ALPHA_NUM : return 11;\n        case QRMode.MODE_8BIT_BYTE : return 16;\n        case QRMode.MODE_KANJI     : return 10;\n        default :\n          throw 'mode:' + mode;\n        }\n\n      } else if (type < 41) {\n\n        // 27 - 40\n\n        switch(mode) {\n        case QRMode.MODE_NUMBER    : return 14;\n        case QRMode.MODE_ALPHA_NUM : return 13;\n        case QRMode.MODE_8BIT_BYTE : return 16;\n        case QRMode.MODE_KANJI     : return 12;\n        default :\n          throw 'mode:' + mode;\n        }\n\n      } else {\n        throw 'type:' + type;\n      }\n    };\n\n    _this.getLostPoint = function(qrcode) {\n\n      var moduleCount = qrcode.getModuleCount();\n\n      var lostPoint = 0;\n\n      // LEVEL1\n\n      for (var row = 0; row < moduleCount; row += 1) {\n        for (var col = 0; col < moduleCount; col += 1) {\n\n          var sameCount = 0;\n          var dark = qrcode.isDark(row, col);\n\n          for (var r = -1; r <= 1; r += 1) {\n\n            if (row + r < 0 || moduleCount <= row + r) {\n              continue;\n            }\n\n            for (var c = -1; c <= 1; c += 1) {\n\n              if (col + c < 0 || moduleCount <= col + c) {\n                continue;\n              }\n\n              if (r == 0 && c == 0) {\n                continue;\n              }\n\n              if (dark == qrcode.isDark(row + r, col + c) ) {\n                sameCount += 1;\n              }\n            }\n          }\n\n          if (sameCount > 5) {\n            lostPoint += (3 + sameCount - 5);\n          }\n        }\n      };\n\n      // LEVEL2\n\n      for (var row = 0; row < moduleCount - 1; row += 1) {\n        for (var col = 0; col < moduleCount - 1; col += 1) {\n          var count = 0;\n          if (qrcode.isDark(row, col) ) count += 1;\n          if (qrcode.isDark(row + 1, col) ) count += 1;\n          if (qrcode.isDark(row, col + 1) ) count += 1;\n          if (qrcode.isDark(row + 1, col + 1) ) count += 1;\n          if (count == 0 || count == 4) {\n            lostPoint += 3;\n          }\n        }\n      }\n\n      // LEVEL3\n\n      for (var row = 0; row < moduleCount; row += 1) {\n        for (var col = 0; col < moduleCount - 6; col += 1) {\n          if (qrcode.isDark(row, col)\n              && !qrcode.isDark(row, col + 1)\n              &&  qrcode.isDark(row, col + 2)\n              &&  qrcode.isDark(row, col + 3)\n              &&  qrcode.isDark(row, col + 4)\n              && !qrcode.isDark(row, col + 5)\n              &&  qrcode.isDark(row, col + 6) ) {\n            lostPoint += 40;\n          }\n        }\n      }\n\n      for (var col = 0; col < moduleCount; col += 1) {\n        for (var row = 0; row < moduleCount - 6; row += 1) {\n          if (qrcode.isDark(row, col)\n              && !qrcode.isDark(row + 1, col)\n              &&  qrcode.isDark(row + 2, col)\n              &&  qrcode.isDark(row + 3, col)\n              &&  qrcode.isDark(row + 4, col)\n              && !qrcode.isDark(row + 5, col)\n              &&  qrcode.isDark(row + 6, col) ) {\n            lostPoint += 40;\n          }\n        }\n      }\n\n      // LEVEL4\n\n      var darkCount = 0;\n\n      for (var col = 0; col < moduleCount; col += 1) {\n        for (var row = 0; row < moduleCount; row += 1) {\n          if (qrcode.isDark(row, col) ) {\n            darkCount += 1;\n          }\n        }\n      }\n\n      var ratio = Math.abs(100 * darkCount / moduleCount / moduleCount - 50) / 5;\n      lostPoint += ratio * 10;\n\n      return lostPoint;\n    };\n\n    return _this;\n  }();\n\n  //---------------------------------------------------------------------\n  // QRMath\n  //---------------------------------------------------------------------\n\n  var QRMath = function() {\n\n    var EXP_TABLE = new Array(256);\n    var LOG_TABLE = new Array(256);\n\n    // initialize tables\n    for (var i = 0; i < 8; i += 1) {\n      EXP_TABLE[i] = 1 << i;\n    }\n    for (var i = 8; i < 256; i += 1) {\n      EXP_TABLE[i] = EXP_TABLE[i - 4]\n        ^ EXP_TABLE[i - 5]\n        ^ EXP_TABLE[i - 6]\n        ^ EXP_TABLE[i - 8];\n    }\n    for (var i = 0; i < 255; i += 1) {\n      LOG_TABLE[EXP_TABLE[i] ] = i;\n    }\n\n    var _this = {};\n\n    _this.glog = function(n) {\n\n      if (n < 1) {\n        throw 'glog(' + n + ')';\n      }\n\n      return LOG_TABLE[n];\n    };\n\n    _this.gexp = function(n) {\n\n      while (n < 0) {\n        n += 255;\n      }\n\n      while (n >= 256) {\n        n -= 255;\n      }\n\n      return EXP_TABLE[n];\n    };\n\n    return _this;\n  }();\n\n  //---------------------------------------------------------------------\n  // qrPolynomial\n  //---------------------------------------------------------------------\n\n  function qrPolynomial(num, shift) {\n\n    if (typeof num.length == 'undefined') {\n      throw num.length + '/' + shift;\n    }\n\n    var _num = function() {\n      var offset = 0;\n      while (offset < num.length && num[offset] == 0) {\n        offset += 1;\n      }\n      var _num = new Array(num.length - offset + shift);\n      for (var i = 0; i < num.length - offset; i += 1) {\n        _num[i] = num[i + offset];\n      }\n      return _num;\n    }();\n\n    var _this = {};\n\n    _this.getAt = function(index) {\n      return _num[index];\n    };\n\n    _this.getLength = function() {\n      return _num.length;\n    };\n\n    _this.multiply = function(e) {\n\n      var num = new Array(_this.getLength() + e.getLength() - 1);\n\n      for (var i = 0; i < _this.getLength(); i += 1) {\n        for (var j = 0; j < e.getLength(); j += 1) {\n          num[i + j] ^= QRMath.gexp(QRMath.glog(_this.getAt(i) ) + QRMath.glog(e.getAt(j) ) );\n        }\n      }\n\n      return qrPolynomial(num, 0);\n    };\n\n    _this.mod = function(e) {\n\n      if (_this.getLength() - e.getLength() < 0) {\n        return _this;\n      }\n\n      var ratio = QRMath.glog(_this.getAt(0) ) - QRMath.glog(e.getAt(0) );\n\n      var num = new Array(_this.getLength() );\n      for (var i = 0; i < _this.getLength(); i += 1) {\n        num[i] = _this.getAt(i);\n      }\n\n      for (var i = 0; i < e.getLength(); i += 1) {\n        num[i] ^= QRMath.gexp(QRMath.glog(e.getAt(i) ) + ratio);\n      }\n\n      // recursive call\n      return qrPolynomial(num, 0).mod(e);\n    };\n\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // QRRSBlock\n  //---------------------------------------------------------------------\n\n  var QRRSBlock = function() {\n\n    var RS_BLOCK_TABLE = [\n\n      // L\n      // M\n      // Q\n      // H\n\n      // 1\n      [1, 26, 19],\n      [1, 26, 16],\n      [1, 26, 13],\n      [1, 26, 9],\n\n      // 2\n      [1, 44, 34],\n      [1, 44, 28],\n      [1, 44, 22],\n      [1, 44, 16],\n\n      // 3\n      [1, 70, 55],\n      [1, 70, 44],\n      [2, 35, 17],\n      [2, 35, 13],\n\n      // 4\n      [1, 100, 80],\n      [2, 50, 32],\n      [2, 50, 24],\n      [4, 25, 9],\n\n      // 5\n      [1, 134, 108],\n      [2, 67, 43],\n      [2, 33, 15, 2, 34, 16],\n      [2, 33, 11, 2, 34, 12],\n\n      // 6\n      [2, 86, 68],\n      [4, 43, 27],\n      [4, 43, 19],\n      [4, 43, 15],\n\n      // 7\n      [2, 98, 78],\n      [4, 49, 31],\n      [2, 32, 14, 4, 33, 15],\n      [4, 39, 13, 1, 40, 14],\n\n      // 8\n      [2, 121, 97],\n      [2, 60, 38, 2, 61, 39],\n      [4, 40, 18, 2, 41, 19],\n      [4, 40, 14, 2, 41, 15],\n\n      // 9\n      [2, 146, 116],\n      [3, 58, 36, 2, 59, 37],\n      [4, 36, 16, 4, 37, 17],\n      [4, 36, 12, 4, 37, 13],\n\n      // 10\n      [2, 86, 68, 2, 87, 69],\n      [4, 69, 43, 1, 70, 44],\n      [6, 43, 19, 2, 44, 20],\n      [6, 43, 15, 2, 44, 16],\n\n      // 11\n      [4, 101, 81],\n      [1, 80, 50, 4, 81, 51],\n      [4, 50, 22, 4, 51, 23],\n      [3, 36, 12, 8, 37, 13],\n\n      // 12\n      [2, 116, 92, 2, 117, 93],\n      [6, 58, 36, 2, 59, 37],\n      [4, 46, 20, 6, 47, 21],\n      [7, 42, 14, 4, 43, 15],\n\n      // 13\n      [4, 133, 107],\n      [8, 59, 37, 1, 60, 38],\n      [8, 44, 20, 4, 45, 21],\n      [12, 33, 11, 4, 34, 12],\n\n      // 14\n      [3, 145, 115, 1, 146, 116],\n      [4, 64, 40, 5, 65, 41],\n      [11, 36, 16, 5, 37, 17],\n      [11, 36, 12, 5, 37, 13],\n\n      // 15\n      [5, 109, 87, 1, 110, 88],\n      [5, 65, 41, 5, 66, 42],\n      [5, 54, 24, 7, 55, 25],\n      [11, 36, 12, 7, 37, 13],\n\n      // 16\n      [5, 122, 98, 1, 123, 99],\n      [7, 73, 45, 3, 74, 46],\n      [15, 43, 19, 2, 44, 20],\n      [3, 45, 15, 13, 46, 16],\n\n      // 17\n      [1, 135, 107, 5, 136, 108],\n      [10, 74, 46, 1, 75, 47],\n      [1, 50, 22, 15, 51, 23],\n      [2, 42, 14, 17, 43, 15],\n\n      // 18\n      [5, 150, 120, 1, 151, 121],\n      [9, 69, 43, 4, 70, 44],\n      [17, 50, 22, 1, 51, 23],\n      [2, 42, 14, 19, 43, 15],\n\n      // 19\n      [3, 141, 113, 4, 142, 114],\n      [3, 70, 44, 11, 71, 45],\n      [17, 47, 21, 4, 48, 22],\n      [9, 39, 13, 16, 40, 14],\n\n      // 20\n      [3, 135, 107, 5, 136, 108],\n      [3, 67, 41, 13, 68, 42],\n      [15, 54, 24, 5, 55, 25],\n      [15, 43, 15, 10, 44, 16],\n\n      // 21\n      [4, 144, 116, 4, 145, 117],\n      [17, 68, 42],\n      [17, 50, 22, 6, 51, 23],\n      [19, 46, 16, 6, 47, 17],\n\n      // 22\n      [2, 139, 111, 7, 140, 112],\n      [17, 74, 46],\n      [7, 54, 24, 16, 55, 25],\n      [34, 37, 13],\n\n      // 23\n      [4, 151, 121, 5, 152, 122],\n      [4, 75, 47, 14, 76, 48],\n      [11, 54, 24, 14, 55, 25],\n      [16, 45, 15, 14, 46, 16],\n\n      // 24\n      [6, 147, 117, 4, 148, 118],\n      [6, 73, 45, 14, 74, 46],\n      [11, 54, 24, 16, 55, 25],\n      [30, 46, 16, 2, 47, 17],\n\n      // 25\n      [8, 132, 106, 4, 133, 107],\n      [8, 75, 47, 13, 76, 48],\n      [7, 54, 24, 22, 55, 25],\n      [22, 45, 15, 13, 46, 16],\n\n      // 26\n      [10, 142, 114, 2, 143, 115],\n      [19, 74, 46, 4, 75, 47],\n      [28, 50, 22, 6, 51, 23],\n      [33, 46, 16, 4, 47, 17],\n\n      // 27\n      [8, 152, 122, 4, 153, 123],\n      [22, 73, 45, 3, 74, 46],\n      [8, 53, 23, 26, 54, 24],\n      [12, 45, 15, 28, 46, 16],\n\n      // 28\n      [3, 147, 117, 10, 148, 118],\n      [3, 73, 45, 23, 74, 46],\n      [4, 54, 24, 31, 55, 25],\n      [11, 45, 15, 31, 46, 16],\n\n      // 29\n      [7, 146, 116, 7, 147, 117],\n      [21, 73, 45, 7, 74, 46],\n      [1, 53, 23, 37, 54, 24],\n      [19, 45, 15, 26, 46, 16],\n\n      // 30\n      [5, 145, 115, 10, 146, 116],\n      [19, 75, 47, 10, 76, 48],\n      [15, 54, 24, 25, 55, 25],\n      [23, 45, 15, 25, 46, 16],\n\n      // 31\n      [13, 145, 115, 3, 146, 116],\n      [2, 74, 46, 29, 75, 47],\n      [42, 54, 24, 1, 55, 25],\n      [23, 45, 15, 28, 46, 16],\n\n      // 32\n      [17, 145, 115],\n      [10, 74, 46, 23, 75, 47],\n      [10, 54, 24, 35, 55, 25],\n      [19, 45, 15, 35, 46, 16],\n\n      // 33\n      [17, 145, 115, 1, 146, 116],\n      [14, 74, 46, 21, 75, 47],\n      [29, 54, 24, 19, 55, 25],\n      [11, 45, 15, 46, 46, 16],\n\n      // 34\n      [13, 145, 115, 6, 146, 116],\n      [14, 74, 46, 23, 75, 47],\n      [44, 54, 24, 7, 55, 25],\n      [59, 46, 16, 1, 47, 17],\n\n      // 35\n      [12, 151, 121, 7, 152, 122],\n      [12, 75, 47, 26, 76, 48],\n      [39, 54, 24, 14, 55, 25],\n      [22, 45, 15, 41, 46, 16],\n\n      // 36\n      [6, 151, 121, 14, 152, 122],\n      [6, 75, 47, 34, 76, 48],\n      [46, 54, 24, 10, 55, 25],\n      [2, 45, 15, 64, 46, 16],\n\n      // 37\n      [17, 152, 122, 4, 153, 123],\n      [29, 74, 46, 14, 75, 47],\n      [49, 54, 24, 10, 55, 25],\n      [24, 45, 15, 46, 46, 16],\n\n      // 38\n      [4, 152, 122, 18, 153, 123],\n      [13, 74, 46, 32, 75, 47],\n      [48, 54, 24, 14, 55, 25],\n      [42, 45, 15, 32, 46, 16],\n\n      // 39\n      [20, 147, 117, 4, 148, 118],\n      [40, 75, 47, 7, 76, 48],\n      [43, 54, 24, 22, 55, 25],\n      [10, 45, 15, 67, 46, 16],\n\n      // 40\n      [19, 148, 118, 6, 149, 119],\n      [18, 75, 47, 31, 76, 48],\n      [34, 54, 24, 34, 55, 25],\n      [20, 45, 15, 61, 46, 16]\n    ];\n\n    var qrRSBlock = function(totalCount, dataCount) {\n      var _this = {};\n      _this.totalCount = totalCount;\n      _this.dataCount = dataCount;\n      return _this;\n    };\n\n    var _this = {};\n\n    var getRsBlockTable = function(typeNumber, errorCorrectionLevel) {\n\n      switch(errorCorrectionLevel) {\n      case QRErrorCorrectionLevel.L :\n        return RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 0];\n      case QRErrorCorrectionLevel.M :\n        return RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 1];\n      case QRErrorCorrectionLevel.Q :\n        return RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 2];\n      case QRErrorCorrectionLevel.H :\n        return RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 3];\n      default :\n        return undefined;\n      }\n    };\n\n    _this.getRSBlocks = function(typeNumber, errorCorrectionLevel) {\n\n      var rsBlock = getRsBlockTable(typeNumber, errorCorrectionLevel);\n\n      if (typeof rsBlock == 'undefined') {\n        throw 'bad rs block @ typeNumber:' + typeNumber +\n            '/errorCorrectionLevel:' + errorCorrectionLevel;\n      }\n\n      var length = rsBlock.length / 3;\n\n      var list = [];\n\n      for (var i = 0; i < length; i += 1) {\n\n        var count = rsBlock[i * 3 + 0];\n        var totalCount = rsBlock[i * 3 + 1];\n        var dataCount = rsBlock[i * 3 + 2];\n\n        for (var j = 0; j < count; j += 1) {\n          list.push(qrRSBlock(totalCount, dataCount) );\n        }\n      }\n\n      return list;\n    };\n\n    return _this;\n  }();\n\n  //---------------------------------------------------------------------\n  // qrBitBuffer\n  //---------------------------------------------------------------------\n\n  var qrBitBuffer = function() {\n\n    var _buffer = [];\n    var _length = 0;\n\n    var _this = {};\n\n    _this.getBuffer = function() {\n      return _buffer;\n    };\n\n    _this.getAt = function(index) {\n      var bufIndex = Math.floor(index / 8);\n      return ( (_buffer[bufIndex] >>> (7 - index % 8) ) & 1) == 1;\n    };\n\n    _this.put = function(num, length) {\n      for (var i = 0; i < length; i += 1) {\n        _this.putBit( ( (num >>> (length - i - 1) ) & 1) == 1);\n      }\n    };\n\n    _this.getLengthInBits = function() {\n      return _length;\n    };\n\n    _this.putBit = function(bit) {\n\n      var bufIndex = Math.floor(_length / 8);\n      if (_buffer.length <= bufIndex) {\n        _buffer.push(0);\n      }\n\n      if (bit) {\n        _buffer[bufIndex] |= (0x80 >>> (_length % 8) );\n      }\n\n      _length += 1;\n    };\n\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // qrNumber\n  //---------------------------------------------------------------------\n\n  var qrNumber = function(data) {\n\n    var _mode = QRMode.MODE_NUMBER;\n    var _data = data;\n\n    var _this = {};\n\n    _this.getMode = function() {\n      return _mode;\n    };\n\n    _this.getLength = function(buffer) {\n      return _data.length;\n    };\n\n    _this.write = function(buffer) {\n\n      var data = _data;\n\n      var i = 0;\n\n      while (i + 2 < data.length) {\n        buffer.put(strToNum(data.substring(i, i + 3) ), 10);\n        i += 3;\n      }\n\n      if (i < data.length) {\n        if (data.length - i == 1) {\n          buffer.put(strToNum(data.substring(i, i + 1) ), 4);\n        } else if (data.length - i == 2) {\n          buffer.put(strToNum(data.substring(i, i + 2) ), 7);\n        }\n      }\n    };\n\n    var strToNum = function(s) {\n      var num = 0;\n      for (var i = 0; i < s.length; i += 1) {\n        num = num * 10 + chatToNum(s.charAt(i) );\n      }\n      return num;\n    };\n\n    var chatToNum = function(c) {\n      if ('0' <= c && c <= '9') {\n        return c.charCodeAt(0) - '0'.charCodeAt(0);\n      }\n      throw 'illegal char :' + c;\n    };\n\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // qrAlphaNum\n  //---------------------------------------------------------------------\n\n  var qrAlphaNum = function(data) {\n\n    var _mode = QRMode.MODE_ALPHA_NUM;\n    var _data = data;\n\n    var _this = {};\n\n    _this.getMode = function() {\n      return _mode;\n    };\n\n    _this.getLength = function(buffer) {\n      return _data.length;\n    };\n\n    _this.write = function(buffer) {\n\n      var s = _data;\n\n      var i = 0;\n\n      while (i + 1 < s.length) {\n        buffer.put(\n          getCode(s.charAt(i) ) * 45 +\n          getCode(s.charAt(i + 1) ), 11);\n        i += 2;\n      }\n\n      if (i < s.length) {\n        buffer.put(getCode(s.charAt(i) ), 6);\n      }\n    };\n\n    var getCode = function(c) {\n\n      if ('0' <= c && c <= '9') {\n        return c.charCodeAt(0) - '0'.charCodeAt(0);\n      } else if ('A' <= c && c <= 'Z') {\n        return c.charCodeAt(0) - 'A'.charCodeAt(0) + 10;\n      } else {\n        switch (c) {\n        case ' ' : return 36;\n        case '$' : return 37;\n        case '%' : return 38;\n        case '*' : return 39;\n        case '+' : return 40;\n        case '-' : return 41;\n        case '.' : return 42;\n        case '/' : return 43;\n        case ':' : return 44;\n        default :\n          throw 'illegal char :' + c;\n        }\n      }\n    };\n\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // qr8BitByte\n  //---------------------------------------------------------------------\n\n  var qr8BitByte = function(data) {\n\n    var _mode = QRMode.MODE_8BIT_BYTE;\n    var _data = data;\n    var _bytes = qrcode.stringToBytes(data);\n\n    var _this = {};\n\n    _this.getMode = function() {\n      return _mode;\n    };\n\n    _this.getLength = function(buffer) {\n      return _bytes.length;\n    };\n\n    _this.write = function(buffer) {\n      for (var i = 0; i < _bytes.length; i += 1) {\n        buffer.put(_bytes[i], 8);\n      }\n    };\n\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // qrKanji\n  //---------------------------------------------------------------------\n\n  var qrKanji = function(data) {\n\n    var _mode = QRMode.MODE_KANJI;\n    var _data = data;\n\n    var stringToBytes = qrcode.stringToBytesFuncs['SJIS'];\n    if (!stringToBytes) {\n      throw 'sjis not supported.';\n    }\n    !function(c, code) {\n      // self test for sjis support.\n      var test = stringToBytes(c);\n      if (test.length != 2 || ( (test[0] << 8) | test[1]) != code) {\n        throw 'sjis not supported.';\n      }\n    }('\\u53cb', 0x9746);\n\n    var _bytes = stringToBytes(data);\n\n    var _this = {};\n\n    _this.getMode = function() {\n      return _mode;\n    };\n\n    _this.getLength = function(buffer) {\n      return ~~(_bytes.length / 2);\n    };\n\n    _this.write = function(buffer) {\n\n      var data = _bytes;\n\n      var i = 0;\n\n      while (i + 1 < data.length) {\n\n        var c = ( (0xff & data[i]) << 8) | (0xff & data[i + 1]);\n\n        if (0x8140 <= c && c <= 0x9FFC) {\n          c -= 0x8140;\n        } else if (0xE040 <= c && c <= 0xEBBF) {\n          c -= 0xC140;\n        } else {\n          throw 'illegal char at ' + (i + 1) + '/' + c;\n        }\n\n        c = ( (c >>> 8) & 0xff) * 0xC0 + (c & 0xff);\n\n        buffer.put(c, 13);\n\n        i += 2;\n      }\n\n      if (i < data.length) {\n        throw 'illegal char at ' + (i + 1);\n      }\n    };\n\n    return _this;\n  };\n\n  //=====================================================================\n  // GIF Support etc.\n  //\n\n  //---------------------------------------------------------------------\n  // byteArrayOutputStream\n  //---------------------------------------------------------------------\n\n  var byteArrayOutputStream = function() {\n\n    var _bytes = [];\n\n    var _this = {};\n\n    _this.writeByte = function(b) {\n      _bytes.push(b & 0xff);\n    };\n\n    _this.writeShort = function(i) {\n      _this.writeByte(i);\n      _this.writeByte(i >>> 8);\n    };\n\n    _this.writeBytes = function(b, off, len) {\n      off = off || 0;\n      len = len || b.length;\n      for (var i = 0; i < len; i += 1) {\n        _this.writeByte(b[i + off]);\n      }\n    };\n\n    _this.writeString = function(s) {\n      for (var i = 0; i < s.length; i += 1) {\n        _this.writeByte(s.charCodeAt(i) );\n      }\n    };\n\n    _this.toByteArray = function() {\n      return _bytes;\n    };\n\n    _this.toString = function() {\n      var s = '';\n      s += '[';\n      for (var i = 0; i < _bytes.length; i += 1) {\n        if (i > 0) {\n          s += ',';\n        }\n        s += _bytes[i];\n      }\n      s += ']';\n      return s;\n    };\n\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // base64EncodeOutputStream\n  //---------------------------------------------------------------------\n\n  var base64EncodeOutputStream = function() {\n\n    var _buffer = 0;\n    var _buflen = 0;\n    var _length = 0;\n    var _base64 = '';\n\n    var _this = {};\n\n    var writeEncoded = function(b) {\n      _base64 += String.fromCharCode(encode(b & 0x3f) );\n    };\n\n    var encode = function(n) {\n      if (n < 0) {\n        // error.\n      } else if (n < 26) {\n        return 0x41 + n;\n      } else if (n < 52) {\n        return 0x61 + (n - 26);\n      } else if (n < 62) {\n        return 0x30 + (n - 52);\n      } else if (n == 62) {\n        return 0x2b;\n      } else if (n == 63) {\n        return 0x2f;\n      }\n      throw 'n:' + n;\n    };\n\n    _this.writeByte = function(n) {\n\n      _buffer = (_buffer << 8) | (n & 0xff);\n      _buflen += 8;\n      _length += 1;\n\n      while (_buflen >= 6) {\n        writeEncoded(_buffer >>> (_buflen - 6) );\n        _buflen -= 6;\n      }\n    };\n\n    _this.flush = function() {\n\n      if (_buflen > 0) {\n        writeEncoded(_buffer << (6 - _buflen) );\n        _buffer = 0;\n        _buflen = 0;\n      }\n\n      if (_length % 3 != 0) {\n        // padding\n        var padlen = 3 - _length % 3;\n        for (var i = 0; i < padlen; i += 1) {\n          _base64 += '=';\n        }\n      }\n    };\n\n    _this.toString = function() {\n      return _base64;\n    };\n\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // base64DecodeInputStream\n  //---------------------------------------------------------------------\n\n  var base64DecodeInputStream = function(str) {\n\n    var _str = str;\n    var _pos = 0;\n    var _buffer = 0;\n    var _buflen = 0;\n\n    var _this = {};\n\n    _this.read = function() {\n\n      while (_buflen < 8) {\n\n        if (_pos >= _str.length) {\n          if (_buflen == 0) {\n            return -1;\n          }\n          throw 'unexpected end of file./' + _buflen;\n        }\n\n        var c = _str.charAt(_pos);\n        _pos += 1;\n\n        if (c == '=') {\n          _buflen = 0;\n          return -1;\n        } else if (c.match(/^\\s$/) ) {\n          // ignore if whitespace.\n          continue;\n        }\n\n        _buffer = (_buffer << 6) | decode(c.charCodeAt(0) );\n        _buflen += 6;\n      }\n\n      var n = (_buffer >>> (_buflen - 8) ) & 0xff;\n      _buflen -= 8;\n      return n;\n    };\n\n    var decode = function(c) {\n      if (0x41 <= c && c <= 0x5a) {\n        return c - 0x41;\n      } else if (0x61 <= c && c <= 0x7a) {\n        return c - 0x61 + 26;\n      } else if (0x30 <= c && c <= 0x39) {\n        return c - 0x30 + 52;\n      } else if (c == 0x2b) {\n        return 62;\n      } else if (c == 0x2f) {\n        return 63;\n      } else {\n        throw 'c:' + c;\n      }\n    };\n\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // gifImage (B/W)\n  //---------------------------------------------------------------------\n\n  var gifImage = function(width, height) {\n\n    var _width = width;\n    var _height = height;\n    var _data = new Array(width * height);\n\n    var _this = {};\n\n    _this.setPixel = function(x, y, pixel) {\n      _data[y * _width + x] = pixel;\n    };\n\n    _this.write = function(out) {\n\n      //---------------------------------\n      // GIF Signature\n\n      out.writeString('GIF87a');\n\n      //---------------------------------\n      // Screen Descriptor\n\n      out.writeShort(_width);\n      out.writeShort(_height);\n\n      out.writeByte(0x80); // 2bit\n      out.writeByte(0);\n      out.writeByte(0);\n\n      //---------------------------------\n      // Global Color Map\n\n      // black\n      out.writeByte(0x00);\n      out.writeByte(0x00);\n      out.writeByte(0x00);\n\n      // white\n      out.writeByte(0xff);\n      out.writeByte(0xff);\n      out.writeByte(0xff);\n\n      //---------------------------------\n      // Image Descriptor\n\n      out.writeString(',');\n      out.writeShort(0);\n      out.writeShort(0);\n      out.writeShort(_width);\n      out.writeShort(_height);\n      out.writeByte(0);\n\n      //---------------------------------\n      // Local Color Map\n\n      //---------------------------------\n      // Raster Data\n\n      var lzwMinCodeSize = 2;\n      var raster = getLZWRaster(lzwMinCodeSize);\n\n      out.writeByte(lzwMinCodeSize);\n\n      var offset = 0;\n\n      while (raster.length - offset > 255) {\n        out.writeByte(255);\n        out.writeBytes(raster, offset, 255);\n        offset += 255;\n      }\n\n      out.writeByte(raster.length - offset);\n      out.writeBytes(raster, offset, raster.length - offset);\n      out.writeByte(0x00);\n\n      //---------------------------------\n      // GIF Terminator\n      out.writeString(';');\n    };\n\n    var bitOutputStream = function(out) {\n\n      var _out = out;\n      var _bitLength = 0;\n      var _bitBuffer = 0;\n\n      var _this = {};\n\n      _this.write = function(data, length) {\n\n        if ( (data >>> length) != 0) {\n          throw 'length over';\n        }\n\n        while (_bitLength + length >= 8) {\n          _out.writeByte(0xff & ( (data << _bitLength) | _bitBuffer) );\n          length -= (8 - _bitLength);\n          data >>>= (8 - _bitLength);\n          _bitBuffer = 0;\n          _bitLength = 0;\n        }\n\n        _bitBuffer = (data << _bitLength) | _bitBuffer;\n        _bitLength = _bitLength + length;\n      };\n\n      _this.flush = function() {\n        if (_bitLength > 0) {\n          _out.writeByte(_bitBuffer);\n        }\n      };\n\n      return _this;\n    };\n\n    var getLZWRaster = function(lzwMinCodeSize) {\n\n      var clearCode = 1 << lzwMinCodeSize;\n      var endCode = (1 << lzwMinCodeSize) + 1;\n      var bitLength = lzwMinCodeSize + 1;\n\n      // Setup LZWTable\n      var table = lzwTable();\n\n      for (var i = 0; i < clearCode; i += 1) {\n        table.add(String.fromCharCode(i) );\n      }\n      table.add(String.fromCharCode(clearCode) );\n      table.add(String.fromCharCode(endCode) );\n\n      var byteOut = byteArrayOutputStream();\n      var bitOut = bitOutputStream(byteOut);\n\n      // clear code\n      bitOut.write(clearCode, bitLength);\n\n      var dataIndex = 0;\n\n      var s = String.fromCharCode(_data[dataIndex]);\n      dataIndex += 1;\n\n      while (dataIndex < _data.length) {\n\n        var c = String.fromCharCode(_data[dataIndex]);\n        dataIndex += 1;\n\n        if (table.contains(s + c) ) {\n\n          s = s + c;\n\n        } else {\n\n          bitOut.write(table.indexOf(s), bitLength);\n\n          if (table.size() < 0xfff) {\n\n            if (table.size() == (1 << bitLength) ) {\n              bitLength += 1;\n            }\n\n            table.add(s + c);\n          }\n\n          s = c;\n        }\n      }\n\n      bitOut.write(table.indexOf(s), bitLength);\n\n      // end code\n      bitOut.write(endCode, bitLength);\n\n      bitOut.flush();\n\n      return byteOut.toByteArray();\n    };\n\n    var lzwTable = function() {\n\n      var _map = {};\n      var _size = 0;\n\n      var _this = {};\n\n      _this.add = function(key) {\n        if (_this.contains(key) ) {\n          throw 'dup key:' + key;\n        }\n        _map[key] = _size;\n        _size += 1;\n      };\n\n      _this.size = function() {\n        return _size;\n      };\n\n      _this.indexOf = function(key) {\n        return _map[key];\n      };\n\n      _this.contains = function(key) {\n        return typeof _map[key] != 'undefined';\n      };\n\n      return _this;\n    };\n\n    return _this;\n  };\n\n  var createDataURL = function(width, height, getPixel) {\n    var gif = gifImage(width, height);\n    for (var y = 0; y < height; y += 1) {\n      for (var x = 0; x < width; x += 1) {\n        gif.setPixel(x, y, getPixel(x, y) );\n      }\n    }\n\n    var b = byteArrayOutputStream();\n    gif.write(b);\n\n    var base64 = base64EncodeOutputStream();\n    var bytes = b.toByteArray();\n    for (var i = 0; i < bytes.length; i += 1) {\n      base64.writeByte(bytes[i]);\n    }\n    base64.flush();\n\n    return 'data:image/gif;base64,' + base64;\n  };\n\n  //---------------------------------------------------------------------\n  // returns qrcode function.\n\n  return qrcode;\n}();\n\n// multibyte support\n!function() {\n\n  qrcode.stringToBytesFuncs['UTF-8'] = function(s) {\n    // http://stackoverflow.com/questions/18729405/how-to-convert-utf8-string-to-byte-array\n    function toUTF8Array(str) {\n      var utf8 = [];\n      for (var i=0; i < str.length; i++) {\n        var charcode = str.charCodeAt(i);\n        if (charcode < 0x80) utf8.push(charcode);\n        else if (charcode < 0x800) {\n          utf8.push(0xc0 | (charcode >> 6),\n              0x80 | (charcode & 0x3f));\n        }\n        else if (charcode < 0xd800 || charcode >= 0xe000) {\n          utf8.push(0xe0 | (charcode >> 12),\n              0x80 | ((charcode>>6) & 0x3f),\n              0x80 | (charcode & 0x3f));\n        }\n        // surrogate pair\n        else {\n          i++;\n          // UTF-16 encodes 0x10000-0x10FFFF by\n          // subtracting 0x10000 and splitting the\n          // 20 bits of 0x0-0xFFFFF into two halves\n          charcode = 0x10000 + (((charcode & 0x3ff)<<10)\n            | (str.charCodeAt(i) & 0x3ff));\n          utf8.push(0xf0 | (charcode >>18),\n              0x80 | ((charcode>>12) & 0x3f),\n              0x80 | ((charcode>>6) & 0x3f),\n              0x80 | (charcode & 0x3f));\n        }\n      }\n      return utf8;\n    }\n    return toUTF8Array(s);\n  };\n\n}();\n\n(function (factory) {\n  if (typeof define === 'function' && define.amd) {\n      define([], factory);\n  } else if (typeof exports === 'object') {\n      module.exports = factory();\n  }\n}(function () {\n    return qrcode;\n}));\n","\nexport enum OutputMode {\n  DataURI = \"DataURI\",\n  SVG = \"SVG\",\n  Table = \"Table\"\n}\n\nexport enum ErrorCorrectionLevel {\n  Low = \"L\",\n  Medium = \"M\",\n  Quality = \"Q\",\n  High = \"H\"\n}\n",":host {\n  background: transparent;\n\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  div, img {\n    width: 100%;\n    height: 100%;\n    max-width: 100%;\n\n    svg {\n      width: 100%;\n      height: 100%;\n      max-width: 100%;\n    }\n  }\n}\n\n","import {\n  Component,\n  Prop,\n  State,\n  Watch,\n  h\n} from '@stencil/core';\n\n// NOTE: qrcode is a node NPM JavaScript library.\n// It has a browserified version for front-end usage\nimport qrcode from \"qrcode-generator\";\nimport { ErrorCorrectionLevel, OutputMode } from './enums';\n\nfunction appendAttribute(attributeName: string, attributeValue: string, nodeAsString: string): string {\n  const mutatedNodeAsString = nodeAsString.replace('>', ` ${attributeName}=\"${attributeValue.replace('\"','\\'')}\" >`);\n  return mutatedNodeAsString;\n}\n\n@Component({\n  tag: 'qr-code',\n  styleUrl: 'qr-code.scss',\n  shadow: true,\n})\nexport class QRCodeWebComponent {\n  @Prop() contents: string = 'Hello World';\n  @Prop() errorCorrectionLevel: ErrorCorrectionLevel = ErrorCorrectionLevel.High;\n  @Prop() margin: number = 4;\n  @Prop() scale: number = 4;\n  @Prop() colorDark: string = '#000000ff';\n  @Prop() colorLight: string = '#ffffffff';\n  //@Prop() qrVersion: number;\n  @Prop() outputMode: OutputMode = OutputMode.DataURI;\n\n  @State() data: string;\n\n  componentWillLoad() {\n    this.computeAndSetData(this.contents, this.outputMode);\n  }\n\n  computeAndSetData(text: string, outputMode: OutputMode) {\n    const qr: QRCode = qrcode(0, this.errorCorrectionLevel);\n    qr.addData(text);\n    qr.make();\n\n    if (outputMode === 'DataURI') {\n      this.data = qr.createImgTag();\n      this.data = appendAttribute('alt', 'QR Code Image for ' + text, this.data);\n    } else if (outputMode === 'SVG') {\n      this.data = qr.createSvgTag();\n    } else if (outputMode === 'Table') {\n      this.data = qr.createTableTag();\n    } else {\n      this.data = null;\n    }\n  }\n\n  @Watch('outputMode')\n  changeOutputModeHandler(newValue: OutputMode) {\n    this.computeAndSetData(this.contents, newValue);\n  }\n\n  @Watch('contents')\n  changeContentsHandler(newValue: string) {\n    console.log('contents changed', newValue);\n    this.computeAndSetData(newValue, this.outputMode);\n  }\n  @Watch('errorCorrectionLevel')\n  changeErrorCorrectionLevelHandler() {\n    this.computeAndSetData(this.contents, this.outputMode);\n  }\n\n  render() {\n    // see https://github.com/ionic-team/stencil/issues/148\n    return <div innerHTML={this.data} />;\n  }\n}\n"],"mappings":"wEAiBA,IAAIA,EAAS,WAWX,IAAIA,EAAS,SAASC,EAAYC,GAEhC,IAAIC,EAAO,IACX,IAAIC,EAAO,GAEX,IAAIC,EAAcJ,EAClB,IAAIK,EAAwBC,EAAuBL,GACnD,IAAIM,EAAW,KACf,IAAIC,EAAe,EACnB,IAAIC,EAAa,KACjB,IAAIC,EAAY,GAEhB,IAAIC,EAAQ,GAEZ,IAAIC,EAAW,SAASC,EAAMC,GAE5BN,EAAeJ,EAAc,EAAI,GACjCG,EAAW,SAASQ,GAClB,IAAIC,EAAU,IAAIC,MAAMF,GACxB,IAAK,IAAIG,EAAM,EAAGA,EAAMH,EAAaG,GAAO,EAAG,CAC7CF,EAAQE,GAAO,IAAID,MAAMF,GACzB,IAAK,IAAII,EAAM,EAAGA,EAAMJ,EAAaI,GAAO,EAAG,CAC7CH,EAAQE,GAAKC,GAAO,IAChC,CACA,CACQ,OAAOH,CACf,CATiB,CASTR,GAEFY,EAA0B,EAAG,GAC7BA,EAA0BZ,EAAe,EAAG,GAC5CY,EAA0B,EAAGZ,EAAe,GAC5Ca,IACAC,IACAC,EAAcV,EAAMC,GAEpB,GAAIV,GAAe,EAAG,CACpBoB,EAAgBX,EACxB,CAEM,GAAIJ,GAAc,KAAM,CACtBA,EAAagB,EAAWrB,EAAaC,EAAuBK,EACpE,CAEMgB,EAAQjB,EAAYK,EAC1B,EAEI,IAAIM,EAA4B,SAASF,EAAKC,GAE5C,IAAK,IAAIQ,GAAK,EAAGA,GAAK,EAAGA,GAAK,EAAG,CAE/B,GAAIT,EAAMS,IAAM,GAAKnB,GAAgBU,EAAMS,EAAG,SAE9C,IAAK,IAAIC,GAAK,EAAGA,GAAK,EAAGA,GAAK,EAAG,CAE/B,GAAIT,EAAMS,IAAM,GAAKpB,GAAgBW,EAAMS,EAAG,SAE9C,GAAM,GAAKD,GAAKA,GAAK,IAAMC,GAAK,GAAKA,GAAK,IAClC,GAAKA,GAAKA,GAAK,IAAMD,GAAK,GAAKA,GAAK,IACpC,GAAKA,GAAKA,GAAK,GAAK,GAAKC,GAAKA,GAAK,EAAK,CAC9CrB,EAASW,EAAMS,GAAGR,EAAMS,GAAK,IACzC,KAAiB,CACLrB,EAASW,EAAMS,GAAGR,EAAMS,GAAK,KACzC,CACA,CACA,CACA,EAEI,IAAIC,EAAqB,WAEvB,IAAIC,EAAe,EACnB,IAAIC,EAAU,EAEd,IAAK,IAAIC,EAAI,EAAGA,EAAI,EAAGA,GAAK,EAAG,CAE7BpB,EAAS,KAAMoB,GAEf,IAAIC,EAAYC,EAAOC,aAAaxB,GAEpC,GAAIqB,GAAK,GAAKF,EAAeG,EAAW,CACtCH,EAAeG,EACfF,EAAUC,CACpB,CACA,CAEM,OAAOD,CACb,EAEI,IAAIT,EAAqB,WAEvB,IAAK,IAAIK,EAAI,EAAGA,EAAInB,EAAe,EAAGmB,GAAK,EAAG,CAC5C,GAAIpB,EAASoB,GAAG,IAAM,KAAM,CAC1B,QACV,CACQpB,EAASoB,GAAG,GAAMA,EAAI,GAAK,CACnC,CAEM,IAAK,IAAIC,EAAI,EAAGA,EAAIpB,EAAe,EAAGoB,GAAK,EAAG,CAC5C,GAAIrB,EAAS,GAAGqB,IAAM,KAAM,CAC1B,QACV,CACQrB,EAAS,GAAGqB,GAAMA,EAAI,GAAK,CACnC,CACA,EAEI,IAAIP,EAA6B,WAE/B,IAAIe,EAAMF,EAAOG,mBAAmBjC,GAEpC,IAAK,IAAI4B,EAAI,EAAGA,EAAII,EAAIE,OAAQN,GAAK,EAAG,CAEtC,IAAK,IAAIO,EAAI,EAAGA,EAAIH,EAAIE,OAAQC,GAAK,EAAG,CAEtC,IAAIrB,EAAMkB,EAAIJ,GACd,IAAIb,EAAMiB,EAAIG,GAEd,GAAIhC,EAASW,GAAKC,IAAQ,KAAM,CAC9B,QACZ,CAEU,IAAK,IAAIQ,GAAK,EAAGA,GAAK,EAAGA,GAAK,EAAG,CAE/B,IAAK,IAAIC,GAAK,EAAGA,GAAK,EAAGA,GAAK,EAAG,CAE/B,GAAID,IAAM,GAAKA,GAAK,GAAKC,IAAM,GAAKA,GAAK,GACjCD,GAAK,GAAKC,GAAK,EAAK,CAC1BrB,EAASW,EAAMS,GAAGR,EAAMS,GAAK,IAC7C,KAAqB,CACLrB,EAASW,EAAMS,GAAGR,EAAMS,GAAK,KAC7C,CACA,CACA,CACA,CACA,CACA,EAEI,IAAIJ,EAAkB,SAASX,GAE7B,IAAI2B,EAAON,EAAOO,iBAAiBrC,GAEnC,IAAK,IAAI4B,EAAI,EAAGA,EAAI,GAAIA,GAAK,EAAG,CAC9B,IAAIU,GAAQ7B,IAAW2B,GAAQR,EAAK,IAAM,EAC1CzB,EAASoC,KAAKC,MAAMZ,EAAI,IAAIA,EAAI,EAAIxB,EAAe,EAAI,GAAKkC,CACpE,CAEM,IAAK,IAAIV,EAAI,EAAGA,EAAI,GAAIA,GAAK,EAAG,CAC9B,IAAIU,GAAQ7B,IAAW2B,GAAQR,EAAK,IAAM,EAC1CzB,EAASyB,EAAI,EAAIxB,EAAe,EAAI,GAAGmC,KAAKC,MAAMZ,EAAI,IAAMU,CACpE,CACA,EAEI,IAAInB,EAAgB,SAASV,EAAMC,GAEjC,IAAI+B,EAAQxC,GAAyB,EAAKS,EAC1C,IAAI0B,EAAON,EAAOY,eAAeD,GAGjC,IAAK,IAAIb,EAAI,EAAGA,EAAI,GAAIA,GAAK,EAAG,CAE9B,IAAIU,GAAQ7B,IAAW2B,GAAQR,EAAK,IAAM,EAE1C,GAAIA,EAAI,EAAG,CACTzB,EAASyB,GAAG,GAAKU,CAC3B,MAAe,GAAIV,EAAI,EAAG,CAChBzB,EAASyB,EAAI,GAAG,GAAKU,CAC/B,KAAe,CACLnC,EAASC,EAAe,GAAKwB,GAAG,GAAKU,CAC/C,CACA,CAGM,IAAK,IAAIV,EAAI,EAAGA,EAAI,GAAIA,GAAK,EAAG,CAE9B,IAAIU,GAAQ7B,IAAW2B,GAAQR,EAAK,IAAM,EAE1C,GAAIA,EAAI,EAAG,CACTzB,EAAS,GAAGC,EAAewB,EAAI,GAAKU,CAC9C,MAAe,GAAIV,EAAI,EAAG,CAChBzB,EAAS,GAAG,GAAKyB,EAAI,EAAI,GAAKU,CACxC,KAAe,CACLnC,EAAS,GAAG,GAAKyB,EAAI,GAAKU,CACpC,CACA,CAGMnC,EAASC,EAAe,GAAG,IAAOK,CACxC,EAEI,IAAIa,EAAU,SAASmB,EAAM/B,GAE3B,IAAIiC,GAAO,EACX,IAAI7B,EAAMV,EAAe,EACzB,IAAIwC,EAAW,EACf,IAAIC,EAAY,EAChB,IAAIC,EAAWhB,EAAOiB,gBAAgBrC,GAEtC,IAAK,IAAIK,EAAMX,EAAe,EAAGW,EAAM,EAAGA,GAAO,EAAG,CAElD,GAAIA,GAAO,EAAGA,GAAO,EAErB,MAAO,KAAM,CAEX,IAAK,IAAIS,EAAI,EAAGA,EAAI,EAAGA,GAAK,EAAG,CAE7B,GAAIrB,EAASW,GAAKC,EAAMS,IAAM,KAAM,CAElC,IAAIwB,EAAO,MAEX,GAAIH,EAAYJ,EAAKP,OAAQ,CAC3Bc,GAAYP,EAAKI,KAAeD,EAAY,IAAM,CAClE,CAEc,IAAIK,EAAOH,EAAShC,EAAKC,EAAMS,GAE/B,GAAIyB,EAAM,CACRD,GAAQA,CACxB,CAEc7C,EAASW,GAAKC,EAAMS,GAAKwB,EACzBJ,GAAY,EAEZ,GAAIA,IAAa,EAAG,CAClBC,GAAa,EACbD,EAAW,CAC3B,CACA,CACA,CAEU9B,GAAO6B,EAEP,GAAI7B,EAAM,GAAKV,GAAgBU,EAAK,CAClCA,GAAO6B,EACPA,GAAOA,EACP,KACZ,CACA,CACA,CACA,EAEI,IAAIO,EAAc,SAASC,EAAQC,GAEjC,IAAIC,EAAS,EAEb,IAAIC,EAAa,EACjB,IAAIC,EAAa,EAEjB,IAAIC,EAAS,IAAI3C,MAAMuC,EAASlB,QAChC,IAAIuB,EAAS,IAAI5C,MAAMuC,EAASlB,QAEhC,IAAK,IAAIX,EAAI,EAAGA,EAAI6B,EAASlB,OAAQX,GAAK,EAAG,CAE3C,IAAImC,EAAUN,EAAS7B,GAAGoC,UAC1B,IAAIC,EAAUR,EAAS7B,GAAGsC,WAAaH,EAEvCJ,EAAaf,KAAKuB,IAAIR,EAAYI,GAClCH,EAAahB,KAAKuB,IAAIP,EAAYK,GAElCJ,EAAOjC,GAAK,IAAIV,MAAM6C,GAEtB,IAAK,IAAI9B,EAAI,EAAGA,EAAI4B,EAAOjC,GAAGW,OAAQN,GAAK,EAAG,CAC5C4B,EAAOjC,GAAGK,GAAK,IAAOuB,EAAOY,YAAYnC,EAAIyB,EACvD,CACQA,GAAUK,EAEV,IAAIM,EAASlC,EAAOmC,0BAA0BL,GAC9C,IAAIM,EAAUC,EAAaX,EAAOjC,GAAIyC,EAAOI,YAAc,GAE3D,IAAIC,EAAUH,EAAQ5B,IAAI0B,GAC1BP,EAAOlC,GAAK,IAAIV,MAAMmD,EAAOI,YAAc,GAC3C,IAAK,IAAIxC,EAAI,EAAGA,EAAI6B,EAAOlC,GAAGW,OAAQN,GAAK,EAAG,CAC5C,IAAI0C,EAAW1C,EAAIyC,EAAQD,YAAcX,EAAOlC,GAAGW,OACnDuB,EAAOlC,GAAGK,GAAM0C,GAAY,EAAID,EAAQE,MAAMD,GAAY,CACpE,CACA,CAEM,IAAIE,EAAiB,EACrB,IAAK,IAAI5C,EAAI,EAAGA,EAAIwB,EAASlB,OAAQN,GAAK,EAAG,CAC3C4C,GAAkBpB,EAASxB,GAAGiC,UACtC,CAEM,IAAIpB,EAAO,IAAI5B,MAAM2D,GACrB,IAAIC,EAAQ,EAEZ,IAAK,IAAI7C,EAAI,EAAGA,EAAI0B,EAAY1B,GAAK,EAAG,CACtC,IAAK,IAAIL,EAAI,EAAGA,EAAI6B,EAASlB,OAAQX,GAAK,EAAG,CAC3C,GAAIK,EAAI4B,EAAOjC,GAAGW,OAAQ,CACxBO,EAAKgC,GAASjB,EAAOjC,GAAGK,GACxB6C,GAAS,CACrB,CACA,CACA,CAEM,IAAK,IAAI7C,EAAI,EAAGA,EAAI2B,EAAY3B,GAAK,EAAG,CACtC,IAAK,IAAIL,EAAI,EAAGA,EAAI6B,EAASlB,OAAQX,GAAK,EAAG,CAC3C,GAAIK,EAAI6B,EAAOlC,GAAGW,OAAQ,CACxBO,EAAKgC,GAAShB,EAAOlC,GAAGK,GACxB6C,GAAS,CACrB,CACA,CACA,CAEM,OAAOhC,CACb,EAEI,IAAIpB,EAAa,SAASzB,EAAYC,EAAsB6E,GAE1D,IAAItB,EAAWuB,EAAUC,YAAYhF,EAAYC,GAEjD,IAAIsD,EAAS0B,IAEb,IAAK,IAAIjD,EAAI,EAAGA,EAAI8C,EAASxC,OAAQN,GAAK,EAAG,CAC3C,IAAIa,EAAOiC,EAAS9C,GACpBuB,EAAO2B,IAAIrC,EAAKsC,UAAW,GAC3B5B,EAAO2B,IAAIrC,EAAK2B,YAAatC,EAAOkD,gBAAgBvC,EAAKsC,UAAWnF,IACpE6C,EAAKwC,MAAM9B,EACnB,CAGM,IAAI+B,EAAiB,EACrB,IAAK,IAAItD,EAAI,EAAGA,EAAIwB,EAASlB,OAAQN,GAAK,EAAG,CAC3CsD,GAAkB9B,EAASxB,GAAG+B,SACtC,CAEM,GAAIR,EAAO6B,kBAAoBE,EAAiB,EAAG,CACjD,KAAM,0BACF/B,EAAO6B,kBACP,IACAE,EAAiB,EACjB,GACZ,CAGM,GAAI/B,EAAO6B,kBAAoB,GAAKE,EAAiB,EAAG,CACtD/B,EAAO2B,IAAI,EAAG,EACtB,CAGM,MAAO3B,EAAO6B,kBAAoB,GAAK,EAAG,CACxC7B,EAAOgC,OAAO,MACtB,CAGM,MAAO,KAAM,CAEX,GAAIhC,EAAO6B,mBAAqBE,EAAiB,EAAG,CAClD,KACV,CACQ/B,EAAO2B,IAAIhF,EAAM,GAEjB,GAAIqD,EAAO6B,mBAAqBE,EAAiB,EAAG,CAClD,KACV,CACQ/B,EAAO2B,IAAI/E,EAAM,EACzB,CAEM,OAAOmD,EAAYC,EAAQC,EACjC,EAEI7C,EAAM6E,QAAU,SAAS3C,EAAM4C,GAE7BA,EAAOA,GAAQ,OAEf,IAAIC,EAAU,KAEd,OAAOD,GACP,IAAK,UACHC,EAAUC,EAAS9C,GACnB,MACF,IAAK,eACH6C,EAAUE,EAAW/C,GACrB,MACF,IAAK,OACH6C,EAAUG,EAAWhD,GACrB,MACF,IAAK,QACH6C,EAAUI,EAAQjD,GAClB,MACF,QACE,KAAM,QAAU4C,EAGlB/E,EAAUqF,KAAKL,GACfjF,EAAa,IACnB,EAEIE,EAAMqF,OAAS,SAAS9E,EAAKC,GAC3B,GAAID,EAAM,GAAKV,GAAgBU,GAAOC,EAAM,GAAKX,GAAgBW,EAAK,CACpE,MAAMD,EAAM,IAAMC,CAC1B,CACM,OAAOZ,EAASW,GAAKC,EAC3B,EAEIR,EAAMsF,eAAiB,WACrB,OAAOzF,CACb,EAEIG,EAAMuF,KAAO,WACX,GAAI9F,EAAc,EAAG,CACnB,IAAIJ,EAAa,EAEjB,KAAOA,EAAa,GAAIA,IAAc,CACpC,IAAIwD,EAAWuB,EAAUC,YAAYhF,EAAYK,GACjD,IAAIkD,EAAS0B,IAEb,IAAK,IAAIjD,EAAI,EAAGA,EAAItB,EAAU4B,OAAQN,IAAK,CACzC,IAAIa,EAAOnC,EAAUsB,GACrBuB,EAAO2B,IAAIrC,EAAKsC,UAAW,GAC3B5B,EAAO2B,IAAIrC,EAAK2B,YAAatC,EAAOkD,gBAAgBvC,EAAKsC,UAAWnF,IACpE6C,EAAKwC,MAAM9B,EACvB,CAEU,IAAI+B,EAAiB,EACrB,IAAK,IAAItD,EAAI,EAAGA,EAAIwB,EAASlB,OAAQN,IAAK,CACxCsD,GAAkB9B,EAASxB,GAAG+B,SAC1C,CAEU,GAAIR,EAAO6B,mBAAqBE,EAAiB,EAAG,CAClD,KACZ,CACA,CAEQlF,EAAcJ,CACtB,CAEMY,EAAS,MAAOiB,IACtB,EAEIlB,EAAMwF,eAAiB,SAASC,EAAUC,GAExCD,EAAWA,GAAY,EACvBC,SAAiBA,GAAU,YAAcD,EAAW,EAAIC,EAExD,IAAIC,EAAS,GAEbA,GAAU,iBACVA,GAAU,0CACVA,GAAU,8BACVA,GAAU,0BAA4BD,EAAS,MAC/CC,GAAU,KACVA,GAAU,UAEV,IAAK,IAAI3E,EAAI,EAAGA,EAAIhB,EAAMsF,iBAAkBtE,GAAK,EAAG,CAElD2E,GAAU,OAEV,IAAK,IAAI1E,EAAI,EAAGA,EAAIjB,EAAMsF,iBAAkBrE,GAAK,EAAG,CAClD0E,GAAU,cACVA,GAAU,0CACVA,GAAU,8BACVA,GAAU,8BACVA,GAAU,WAAaF,EAAW,MAClCE,GAAU,YAAcF,EAAW,MACnCE,GAAU,sBACVA,GAAU3F,EAAMqF,OAAOrE,EAAGC,GAAI,UAAY,UAC1C0E,GAAU,IACVA,GAAU,KACpB,CAEQA,GAAU,OAClB,CAEMA,GAAU,WACVA,GAAU,WAEV,OAAOA,CACb,EAEI3F,EAAM4F,aAAe,SAASH,EAAUC,EAAQG,EAAKC,GAEnD,IAAIC,EAAO,GACX,UAAWC,UAAU,IAAM,SAAU,CAEnCD,EAAOC,UAAU,GAEjBP,EAAWM,EAAKN,SAChBC,EAASK,EAAKL,OACdG,EAAME,EAAKF,IACXC,EAAQC,EAAKD,KACrB,CAEML,EAAWA,GAAY,EACvBC,SAAiBA,GAAU,YAAcD,EAAW,EAAIC,EAGxDG,SAAcA,IAAQ,SAAY,CAACI,KAAMJ,GAAOA,GAAO,GACvDA,EAAII,KAAOJ,EAAII,MAAQ,KACvBJ,EAAIK,GAAML,EAAQ,KAAIA,EAAIK,IAAM,qBAAuB,KAGvDJ,SAAgBA,IAAU,SAAY,CAACG,KAAMH,GAASA,GAAS,GAC/DA,EAAMG,KAAOH,EAAMG,MAAQ,KAC3BH,EAAMI,GAAMJ,EAAU,KAAIA,EAAMI,IAAM,eAAiB,KAEvD,IAAIC,EAAOnG,EAAMsF,iBAAmBG,EAAWC,EAAS,EACxD,IAAIzE,EAAGmF,EAAIpF,EAAGqF,EAAIC,EAAM,GAAIC,EAE5BA,EAAO,IAAMd,EAAW,QAAUA,EAChC,KAAOA,EAAW,SAAWA,EAAW,KAE1Ca,GAAS,wDACTA,IAAUP,EAAKS,SAAW,WAAaL,EAAO,eAAiBA,EAAO,MAAQ,GAC9EG,GAAS,iBAAmBH,EAAO,IAAMA,EAAO,KAChDG,GAAS,uCACTA,GAAUR,EAAMG,MAAQJ,EAAII,KAAQ,gCAChCQ,EAAU,CAACX,EAAMI,GAAIL,EAAIK,IAAIQ,KAAK,KAAKC,QAAW,IAAM,GAC5DL,GAAS,IACTA,GAAUR,EAAU,KAAI,cAAgBW,EAAUX,EAAMI,IAAM,KAC1DO,EAAUX,EAAMG,MAAQ,WAAa,GACzCK,GAAUT,EAAQ,KAAI,oBAAsBY,EAAUZ,EAAIK,IAAM,KAC5DO,EAAUZ,EAAII,MAAQ,iBAAmB,GAC7CK,GAAS,gEACTA,GAAS,YAET,IAAKtF,EAAI,EAAGA,EAAIhB,EAAMsF,iBAAkBtE,GAAK,EAAG,CAC9CqF,EAAKrF,EAAIyE,EAAWC,EACpB,IAAKzE,EAAI,EAAGA,EAAIjB,EAAMsF,iBAAkBrE,GAAK,EAAG,CAC9C,GAAIjB,EAAMqF,OAAOrE,EAAGC,GAAK,CACvBmF,EAAKnF,EAAEwE,EAASC,EAChBY,GAAS,IAAMF,EAAK,IAAMC,EAAKE,CAC3C,CACA,CACA,CAEMD,GAAS,wCACTA,GAAS,SAET,OAAOA,CACb,EAEItG,EAAM4G,cAAgB,SAASnB,EAAUC,GAEvCD,EAAWA,GAAY,EACvBC,SAAiBA,GAAU,YAAcD,EAAW,EAAIC,EAExD,IAAIS,EAAOnG,EAAMsF,iBAAmBG,EAAWC,EAAS,EACxD,IAAImB,EAAMnB,EACV,IAAInC,EAAM4C,EAAOT,EAEjB,OAAOkB,EAAcT,EAAMA,GAAM,SAASW,EAAGC,GAC3C,GAAIF,GAAOC,GAAKA,EAAIvD,GAAOsD,GAAOE,GAAKA,EAAIxD,EAAK,CAC9C,IAAItC,EAAIe,KAAKC,OAAQ6E,EAAID,GAAOpB,GAChC,IAAIzE,EAAIgB,KAAKC,OAAQ8E,EAAIF,GAAOpB,GAChC,OAAOzF,EAAMqF,OAAOrE,EAAGC,GAAI,EAAI,CACzC,KAAe,CACL,OAAO,CACjB,CACA,GACA,EAEIjB,EAAMgH,aAAe,SAASvB,EAAUC,EAAQG,GAE9CJ,EAAWA,GAAY,EACvBC,SAAiBA,GAAU,YAAcD,EAAW,EAAIC,EAExD,IAAIS,EAAOnG,EAAMsF,iBAAmBG,EAAWC,EAAS,EAExD,IAAIuB,EAAM,GACVA,GAAO,OACPA,GAAO,SACPA,GAAOjH,EAAM4G,cAAcnB,EAAUC,GACrCuB,GAAO,IACPA,GAAO,WACPA,GAAOd,EACPc,GAAO,IACPA,GAAO,YACPA,GAAOd,EACPc,GAAO,IACP,GAAIpB,EAAK,CACPoB,GAAO,SACPA,GAAOR,EAAUZ,GACjBoB,GAAO,GACf,CACMA,GAAO,KAEP,OAAOA,CACb,EAEI,IAAIR,EAAY,SAASS,GACvB,IAAIC,EAAU,GACd,IAAK,IAAI9F,EAAI,EAAGA,EAAI6F,EAAEvF,OAAQN,GAAK,EAAG,CACpC,IAAIJ,EAAIiG,EAAEE,OAAO/F,GACjB,OAAOJ,GACP,IAAK,IAAKkG,GAAW,OAAQ,MAC7B,IAAK,IAAKA,GAAW,OAAQ,MAC7B,IAAK,IAAKA,GAAW,QAAS,MAC9B,IAAK,IAAKA,GAAW,SAAU,MAC/B,QAAUA,GAAWlG,EAAG,MAEhC,CACM,OAAOkG,CACb,EAEI,IAAIE,EAAmB,SAAS3B,GAC9B,IAAID,EAAW,EACfC,SAAiBA,GAAU,YAAcD,EAAW,EAAIC,EAExD,IAAIS,EAAOnG,EAAMsF,iBAAmBG,EAAWC,EAAS,EACxD,IAAImB,EAAMnB,EACV,IAAInC,EAAM4C,EAAOT,EAEjB,IAAIqB,EAAGD,EAAGQ,EAAIC,EAAIC,EAElB,IAAIC,EAAS,CACX,KAAM,IACN,KAAM,IACN,KAAM,IACN,KAAM,KAGR,IAAIC,EAAyB,CAC3B,KAAM,IACN,KAAM,IACN,KAAM,IACN,KAAM,KAGR,IAAIC,EAAQ,GACZ,IAAKZ,EAAI,EAAGA,EAAIZ,EAAMY,GAAK,EAAG,CAC5BO,EAAKtF,KAAKC,OAAO8E,EAAIF,GAAOpB,GAC5B8B,EAAKvF,KAAKC,OAAO8E,EAAI,EAAIF,GAAOpB,GAChC,IAAKqB,EAAI,EAAGA,EAAIX,EAAMW,GAAK,EAAG,CAC5BU,EAAI,IAEJ,GAAIX,GAAOC,GAAKA,EAAIvD,GAAOsD,GAAOE,GAAKA,EAAIxD,GAAOvD,EAAMqF,OAAOiC,EAAItF,KAAKC,OAAO6E,EAAID,GAAOpB,IAAY,CACpG+B,EAAI,GAChB,CAEU,GAAIX,GAAOC,GAAKA,EAAIvD,GAAOsD,GAAOE,EAAE,GAAKA,EAAE,EAAIxD,GAAOvD,EAAMqF,OAAOkC,EAAIvF,KAAKC,OAAO6E,EAAID,GAAOpB,IAAY,CACxG+B,GAAK,GACjB,KACe,CACHA,GAAK,GACjB,CAGUG,GAAUjC,EAAS,GAAKqB,EAAE,GAAKxD,EAAOmE,EAAuBF,GAAKC,EAAOD,EACnF,CAEQG,GAAS,IACjB,CAEM,GAAIxB,EAAO,GAAKT,EAAS,EAAG,CAC1B,OAAOiC,EAAMC,UAAU,EAAGD,EAAMhG,OAASwE,EAAO,GAAK7F,MAAM6F,EAAK,GAAGO,KAAK,IAChF,CAEM,OAAOiB,EAAMC,UAAU,EAAGD,EAAMhG,OAAO,EAC7C,EAEI3B,EAAM6H,YAAc,SAASpC,EAAUC,GACrCD,EAAWA,GAAY,EAEvB,GAAIA,EAAW,EAAG,CAChB,OAAO4B,EAAiB3B,EAChC,CAEMD,GAAY,EACZC,SAAiBA,GAAU,YAAcD,EAAW,EAAIC,EAExD,IAAIS,EAAOnG,EAAMsF,iBAAmBG,EAAWC,EAAS,EACxD,IAAImB,EAAMnB,EACV,IAAInC,EAAM4C,EAAOT,EAEjB,IAAIqB,EAAGD,EAAG9F,EAAGwG,EAEb,IAAIM,EAAQxH,MAAMmF,EAAS,GAAGiB,KAAK,MACnC,IAAIqB,EAAQzH,MAAMmF,EAAS,GAAGiB,KAAK,MAEnC,IAAIiB,EAAQ,GACZ,IAAIK,EAAO,GACX,IAAKjB,EAAI,EAAGA,EAAIZ,EAAMY,GAAK,EAAG,CAC5B/F,EAAIgB,KAAKC,OAAQ8E,EAAIF,GAAOpB,GAC5BuC,EAAO,GACP,IAAKlB,EAAI,EAAGA,EAAIX,EAAMW,GAAK,EAAG,CAC5BU,EAAI,EAEJ,GAAIX,GAAOC,GAAKA,EAAIvD,GAAOsD,GAAOE,GAAKA,EAAIxD,GAAOvD,EAAMqF,OAAOrE,EAAGgB,KAAKC,OAAO6E,EAAID,GAAOpB,IAAY,CACnG+B,EAAI,CAChB,CAGUQ,GAAQR,EAAIM,EAAQC,CAC9B,CAEQ,IAAK/G,EAAI,EAAGA,EAAIyE,EAAUzE,GAAK,EAAG,CAChC2G,GAASK,EAAO,IAC1B,CACA,CAEM,OAAOL,EAAMC,UAAU,EAAGD,EAAMhG,OAAO,EAC7C,EAEI3B,EAAMiI,kBAAoB,SAASC,EAASzC,GAC1CA,EAAWA,GAAY,EACvB,IAAI9D,EAAS3B,EAAMsF,iBACnB,IAAK,IAAI/E,EAAM,EAAGA,EAAMoB,EAAQpB,IAAO,CACrC,IAAK,IAAIC,EAAM,EAAGA,EAAMmB,EAAQnB,IAAO,CACrC0H,EAAQC,UAAYnI,EAAMqF,OAAO9E,EAAKC,GAAO,QAAU,QACvD0H,EAAQE,SAAS7H,EAAMkF,EAAUjF,EAAMiF,EAAUA,EAAUA,EACrE,CACA,CACA,EAEI,OAAOzF,CACX,EAMEZ,EAAOiJ,mBAAqB,CAC1BC,QAAY,SAASpB,GACnB,IAAIqB,EAAQ,GACZ,IAAK,IAAIlH,EAAI,EAAGA,EAAI6F,EAAEvF,OAAQN,GAAK,EAAG,CACpC,IAAIJ,EAAIiG,EAAEsB,WAAWnH,GACrBkH,EAAMnD,KAAKnE,EAAI,IACvB,CACM,OAAOsH,CACb,GAGEnJ,EAAOqJ,cAAgBrJ,EAAOiJ,mBAAmB,WAWjDjJ,EAAOsJ,oBAAsB,SAASC,EAAaC,GAIjD,IAAIC,EAAa,WAEf,IAAIC,EAAMC,EAAwBJ,GAClC,IAAIK,EAAO,WACT,IAAIC,EAAIH,EAAIE,OACZ,GAAIC,IAAM,EAAG,KAAM,MACnB,OAAOA,CACf,EAEM,IAAIC,EAAQ,EACZ,IAAIL,EAAa,GACjB,MAAO,KAAM,CACX,IAAIM,EAAKL,EAAIE,OACb,GAAIG,IAAO,EAAG,MACd,IAAIC,EAAKJ,IACT,IAAIK,EAAKL,IACT,IAAIM,EAAKN,IACT,IAAIO,EAAIC,OAAOC,aAAeN,GAAM,EAAKC,GACzC,IAAIM,EAAKL,GAAM,EAAKC,EACpBT,EAAWU,GAAKG,EAChBR,GAAS,CACjB,CACM,GAAIA,GAASN,EAAU,CACrB,MAAMM,EAAQ,OAASN,CAC/B,CAEM,OAAOC,CACb,CA3BqB,GA6BjB,IAAIc,EAAc,IAAInB,WAAW,GAEjC,OAAO,SAAStB,GACd,IAAIqB,EAAQ,GACZ,IAAK,IAAIlH,EAAI,EAAGA,EAAI6F,EAAEvF,OAAQN,GAAK,EAAG,CACpC,IAAIJ,EAAIiG,EAAEsB,WAAWnH,GACrB,GAAIJ,EAAI,IAAK,CACXsH,EAAMnD,KAAKnE,EACrB,KAAe,CACL,IAAIgI,EAAIJ,EAAW3B,EAAEE,OAAO/F,IAC5B,UAAW4H,GAAK,SAAU,CACxB,IAAMA,EAAI,MAASA,EAAG,CAEpBV,EAAMnD,KAAK6D,EACzB,KAAmB,CAELV,EAAMnD,KAAK6D,IAAM,GACjBV,EAAMnD,KAAK6D,EAAI,IAC7B,CACA,KAAiB,CACLV,EAAMnD,KAAKuE,EACvB,CACA,CACA,CACM,OAAOpB,CACb,CACA,EAME,IAAIqB,EAAS,CACXC,YAAiB,GAAK,EACtBC,eAAiB,GAAK,EACtBC,eAAiB,GAAK,EACtBC,WAAiB,GAAK,GAOxB,IAAIrK,EAAyB,CAC3BsK,EAAI,EACJC,EAAI,EACJC,EAAI,EACJC,EAAI,GAON,IAAIC,EAAgB,CAClBC,WAAa,EACbC,WAAa,EACbC,WAAa,EACbC,WAAa,EACbC,WAAa,EACbC,WAAa,EACbC,WAAa,EACbC,WAAa,GAOf,IAAItJ,EAAS,WAEX,IAAIuJ,EAAyB,CAC3B,GACA,CAAC,EAAG,IACJ,CAAC,EAAG,IACJ,CAAC,EAAG,IACJ,CAAC,EAAG,IACJ,CAAC,EAAG,IACJ,CAAC,EAAG,GAAI,IACR,CAAC,EAAG,GAAI,IACR,CAAC,EAAG,GAAI,IACR,CAAC,EAAG,GAAI,IACR,CAAC,EAAG,GAAI,IACR,CAAC,EAAG,GAAI,IACR,CAAC,EAAG,GAAI,IACR,CAAC,EAAG,GAAI,GAAI,IACZ,CAAC,EAAG,GAAI,GAAI,IACZ,CAAC,EAAG,GAAI,GAAI,IACZ,CAAC,EAAG,GAAI,GAAI,IACZ,CAAC,EAAG,GAAI,GAAI,IACZ,CAAC,EAAG,GAAI,GAAI,IACZ,CAAC,EAAG,GAAI,GAAI,IACZ,CAAC,EAAG,GAAI,GAAI,GAAI,IAChB,CAAC,EAAG,GAAI,GAAI,GAAI,IAChB,CAAC,EAAG,GAAI,GAAI,GAAI,KAChB,CAAC,EAAG,GAAI,GAAI,GAAI,KAChB,CAAC,EAAG,GAAI,GAAI,GAAI,KAChB,CAAC,EAAG,GAAI,GAAI,GAAI,KAChB,CAAC,EAAG,GAAI,GAAI,GAAI,KAChB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,KACpB,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,KACrB,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,KACrB,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,KACrB,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,KACrB,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,KACrB,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,KACrB,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,IAAK,KAC1B,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,IAAK,KAC1B,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,IAAK,KAC1B,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,IAAK,KAC1B,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,IAAK,KAC1B,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,IAAK,MAE5B,IAAIC,EAAO,GAAK,GAAO,GAAK,EAAM,GAAK,EAAM,GAAK,EAAM,GAAK,EAAM,GAAK,EAAM,GAAK,EACnF,IAAIC,EAAO,GAAK,GAAO,GAAK,GAAO,GAAK,GAAO,GAAK,EAAM,GAAK,EAAM,GAAK,EAAM,GAAK,EAAM,GAAK,EAChG,IAAIC,EAAY,GAAK,GAAO,GAAK,GAAO,GAAK,GAAO,GAAK,EAAM,GAAK,EAEpE,IAAIjL,EAAQ,GAEZ,IAAIkL,EAAc,SAAShJ,GACzB,IAAIiJ,EAAQ,EACZ,MAAOjJ,GAAQ,EAAG,CAChBiJ,GAAS,EACTjJ,KAAU,CAClB,CACM,OAAOiJ,CACb,EAEInL,EAAMmC,eAAiB,SAASD,GAC9B,IAAIkJ,EAAIlJ,GAAQ,GAChB,MAAOgJ,EAAYE,GAAKF,EAAYH,IAAQ,EAAG,CAC7CK,GAAML,GAAQG,EAAYE,GAAKF,EAAYH,EACnD,CACM,OAAU7I,GAAQ,GAAMkJ,GAAKH,CACnC,EAEIjL,EAAM8B,iBAAmB,SAASI,GAChC,IAAIkJ,EAAIlJ,GAAQ,GAChB,MAAOgJ,EAAYE,GAAKF,EAAYF,IAAQ,EAAG,CAC7CI,GAAMJ,GAAQE,EAAYE,GAAKF,EAAYF,EACnD,CACM,OAAQ9I,GAAQ,GAAMkJ,CAC5B,EAEIpL,EAAM0B,mBAAqB,SAASrC,GAClC,OAAOyL,EAAuBzL,EAAa,EACjD,EAEIW,EAAMwC,gBAAkB,SAASrC,GAE/B,OAAQA,GAER,KAAKkK,EAAcC,WACjB,OAAO,SAASjJ,EAAGO,GAAK,OAAQP,EAAIO,GAAK,GAAK,CAAE,EAClD,KAAKyI,EAAcE,WACjB,OAAO,SAASlJ,EAAGO,GAAK,OAAOP,EAAI,GAAK,CAAE,EAC5C,KAAKgJ,EAAcG,WACjB,OAAO,SAASnJ,EAAGO,GAAK,OAAOA,EAAI,GAAK,CAAE,EAC5C,KAAKyI,EAAcI,WACjB,OAAO,SAASpJ,EAAGO,GAAK,OAAQP,EAAIO,GAAK,GAAK,CAAE,EAClD,KAAKyI,EAAcK,WACjB,OAAO,SAASrJ,EAAGO,GAAK,OAAQI,KAAKC,MAAMZ,EAAI,GAAKW,KAAKC,MAAML,EAAI,IAAO,GAAK,CAAE,EACnF,KAAKyI,EAAcM,WACjB,OAAO,SAAStJ,EAAGO,GAAK,OAAQP,EAAIO,EAAK,EAAKP,EAAIO,EAAK,GAAK,CAAE,EAChE,KAAKyI,EAAcO,WACjB,OAAO,SAASvJ,EAAGO,GAAK,OAAUP,EAAIO,EAAK,EAAKP,EAAIO,EAAK,GAAK,GAAK,CAAE,EACvE,KAAKyI,EAAcQ,WACjB,OAAO,SAASxJ,EAAGO,GAAK,OAAUP,EAAIO,EAAK,GAAKP,EAAIO,GAAK,GAAK,GAAK,CAAE,EAEvE,QACE,KAAM,mBAAqBzB,EAEnC,EAEIH,EAAM0D,0BAA4B,SAAS2H,GACzC,IAAIC,EAAI1H,EAAa,CAAC,GAAI,GAC1B,IAAK,IAAIvC,EAAI,EAAGA,EAAIgK,EAAoBhK,GAAK,EAAG,CAC9CiK,EAAIA,EAAEC,SAAS3H,EAAa,CAAC,EAAG4H,EAAOC,KAAKpK,IAAK,GACzD,CACM,OAAOiK,CACb,EAEItL,EAAMyE,gBAAkB,SAASK,EAAM4G,GAErC,GAAI,GAAKA,GAAQA,EAAO,GAAI,CAI1B,OAAO5G,GACP,KAAK8E,EAAOC,YAAiB,OAAO,GACpC,KAAKD,EAAOE,eAAiB,OAAO,EACpC,KAAKF,EAAOG,eAAiB,OAAO,EACpC,KAAKH,EAAOI,WAAiB,OAAO,EACpC,QACE,KAAM,QAAUlF,EAG1B,MAAa,GAAI4G,EAAO,GAAI,CAIpB,OAAO5G,GACP,KAAK8E,EAAOC,YAAiB,OAAO,GACpC,KAAKD,EAAOE,eAAiB,OAAO,GACpC,KAAKF,EAAOG,eAAiB,OAAO,GACpC,KAAKH,EAAOI,WAAiB,OAAO,GACpC,QACE,KAAM,QAAUlF,EAG1B,MAAa,GAAI4G,EAAO,GAAI,CAIpB,OAAO5G,GACP,KAAK8E,EAAOC,YAAiB,OAAO,GACpC,KAAKD,EAAOE,eAAiB,OAAO,GACpC,KAAKF,EAAOG,eAAiB,OAAO,GACpC,KAAKH,EAAOI,WAAiB,OAAO,GACpC,QACE,KAAM,QAAUlF,EAG1B,KAAa,CACL,KAAM,QAAU4G,CACxB,CACA,EAEI1L,EAAMwB,aAAe,SAASpC,GAE5B,IAAIgB,EAAchB,EAAOkG,iBAEzB,IAAIhE,EAAY,EAIhB,IAAK,IAAIf,EAAM,EAAGA,EAAMH,EAAaG,GAAO,EAAG,CAC7C,IAAK,IAAIC,EAAM,EAAGA,EAAMJ,EAAaI,GAAO,EAAG,CAE7C,IAAImL,EAAY,EAChB,IAAIlJ,EAAOrD,EAAOiG,OAAO9E,EAAKC,GAE9B,IAAK,IAAIQ,GAAK,EAAGA,GAAK,EAAGA,GAAK,EAAG,CAE/B,GAAIT,EAAMS,EAAI,GAAKZ,GAAeG,EAAMS,EAAG,CACzC,QACd,CAEY,IAAK,IAAIC,GAAK,EAAGA,GAAK,EAAGA,GAAK,EAAG,CAE/B,GAAIT,EAAMS,EAAI,GAAKb,GAAeI,EAAMS,EAAG,CACzC,QAChB,CAEc,GAAID,GAAK,GAAKC,GAAK,EAAG,CACpB,QAChB,CAEc,GAAIwB,GAAQrD,EAAOiG,OAAO9E,EAAMS,EAAGR,EAAMS,GAAK,CAC5C0K,GAAa,CAC7B,CACA,CACA,CAEU,GAAIA,EAAY,EAAG,CACjBrK,GAAc,EAAIqK,EAAY,CAC1C,CACA,CACA,CAIM,IAAK,IAAIpL,EAAM,EAAGA,EAAMH,EAAc,EAAGG,GAAO,EAAG,CACjD,IAAK,IAAIC,EAAM,EAAGA,EAAMJ,EAAc,EAAGI,GAAO,EAAG,CACjD,IAAI0I,EAAQ,EACZ,GAAI9J,EAAOiG,OAAO9E,EAAKC,GAAO0I,GAAS,EACvC,GAAI9J,EAAOiG,OAAO9E,EAAM,EAAGC,GAAO0I,GAAS,EAC3C,GAAI9J,EAAOiG,OAAO9E,EAAKC,EAAM,GAAK0I,GAAS,EAC3C,GAAI9J,EAAOiG,OAAO9E,EAAM,EAAGC,EAAM,GAAK0I,GAAS,EAC/C,GAAIA,GAAS,GAAKA,GAAS,EAAG,CAC5B5H,GAAa,CACzB,CACA,CACA,CAIM,IAAK,IAAIf,EAAM,EAAGA,EAAMH,EAAaG,GAAO,EAAG,CAC7C,IAAK,IAAIC,EAAM,EAAGA,EAAMJ,EAAc,EAAGI,GAAO,EAAG,CACjD,GAAIpB,EAAOiG,OAAO9E,EAAKC,KACfpB,EAAOiG,OAAO9E,EAAKC,EAAM,IACzBpB,EAAOiG,OAAO9E,EAAKC,EAAM,IACzBpB,EAAOiG,OAAO9E,EAAKC,EAAM,IACzBpB,EAAOiG,OAAO9E,EAAKC,EAAM,KACzBpB,EAAOiG,OAAO9E,EAAKC,EAAM,IACzBpB,EAAOiG,OAAO9E,EAAKC,EAAM,GAAK,CACpCc,GAAa,EACzB,CACA,CACA,CAEM,IAAK,IAAId,EAAM,EAAGA,EAAMJ,EAAaI,GAAO,EAAG,CAC7C,IAAK,IAAID,EAAM,EAAGA,EAAMH,EAAc,EAAGG,GAAO,EAAG,CACjD,GAAInB,EAAOiG,OAAO9E,EAAKC,KACfpB,EAAOiG,OAAO9E,EAAM,EAAGC,IACvBpB,EAAOiG,OAAO9E,EAAM,EAAGC,IACvBpB,EAAOiG,OAAO9E,EAAM,EAAGC,IACvBpB,EAAOiG,OAAO9E,EAAM,EAAGC,KACvBpB,EAAOiG,OAAO9E,EAAM,EAAGC,IACvBpB,EAAOiG,OAAO9E,EAAM,EAAGC,GAAO,CACpCc,GAAa,EACzB,CACA,CACA,CAIM,IAAIsK,EAAY,EAEhB,IAAK,IAAIpL,EAAM,EAAGA,EAAMJ,EAAaI,GAAO,EAAG,CAC7C,IAAK,IAAID,EAAM,EAAGA,EAAMH,EAAaG,GAAO,EAAG,CAC7C,GAAInB,EAAOiG,OAAO9E,EAAKC,GAAO,CAC5BoL,GAAa,CACzB,CACA,CACA,CAEM,IAAIC,EAAQ7J,KAAK8J,IAAI,IAAMF,EAAYxL,EAAcA,EAAc,IAAM,EACzEkB,GAAauK,EAAQ,GAErB,OAAOvK,CACb,EAEI,OAAOtB,CACX,CAzQe,GA+Qb,IAAIwL,EAAS,WAEX,IAAIO,EAAY,IAAIzL,MAAM,KAC1B,IAAI0L,EAAY,IAAI1L,MAAM,KAG1B,IAAK,IAAIe,EAAI,EAAGA,EAAI,EAAGA,GAAK,EAAG,CAC7B0K,EAAU1K,GAAK,GAAKA,CAC1B,CACI,IAAK,IAAIA,EAAI,EAAGA,EAAI,IAAKA,GAAK,EAAG,CAC/B0K,EAAU1K,GAAK0K,EAAU1K,EAAI,GACzB0K,EAAU1K,EAAI,GACd0K,EAAU1K,EAAI,GACd0K,EAAU1K,EAAI,EACxB,CACI,IAAK,IAAIA,EAAI,EAAGA,EAAI,IAAKA,GAAK,EAAG,CAC/B2K,EAAUD,EAAU1K,IAAOA,CACjC,CAEI,IAAIrB,EAAQ,GAEZA,EAAMiM,KAAO,SAASC,GAEpB,GAAIA,EAAI,EAAG,CACT,KAAM,QAAUA,EAAI,GAC5B,CAEM,OAAOF,EAAUE,EACvB,EAEIlM,EAAMyL,KAAO,SAASS,GAEpB,MAAOA,EAAI,EAAG,CACZA,GAAK,GACb,CAEM,MAAOA,GAAK,IAAK,CACfA,GAAK,GACb,CAEM,OAAOH,EAAUG,EACvB,EAEI,OAAOlM,CACX,CA5Ce,GAkDb,SAAS4D,EAAauI,EAAKC,GAEzB,UAAWD,EAAIxK,QAAU,YAAa,CACpC,MAAMwK,EAAIxK,OAAS,IAAMyK,CAC/B,CAEI,IAAIC,EAAO,WACT,IAAIvJ,EAAS,EACb,MAAOA,EAASqJ,EAAIxK,QAAUwK,EAAIrJ,IAAW,EAAG,CAC9CA,GAAU,CAClB,CACM,IAAIuJ,EAAO,IAAI/L,MAAM6L,EAAIxK,OAASmB,EAASsJ,GAC3C,IAAK,IAAI/K,EAAI,EAAGA,EAAI8K,EAAIxK,OAASmB,EAAQzB,GAAK,EAAG,CAC/CgL,EAAKhL,GAAK8K,EAAI9K,EAAIyB,EAC1B,CACM,OAAOuJ,CACb,CAVe,GAYX,IAAIrM,EAAQ,GAEZA,EAAMgE,MAAQ,SAASE,GACrB,OAAOmI,EAAKnI,EAClB,EAEIlE,EAAM6D,UAAY,WAChB,OAAOwI,EAAK1K,MAClB,EAEI3B,EAAMuL,SAAW,SAASe,GAExB,IAAIH,EAAM,IAAI7L,MAAMN,EAAM6D,YAAcyI,EAAEzI,YAAc,GAExD,IAAK,IAAIxC,EAAI,EAAGA,EAAIrB,EAAM6D,YAAaxC,GAAK,EAAG,CAC7C,IAAK,IAAIO,EAAI,EAAGA,EAAI0K,EAAEzI,YAAajC,GAAK,EAAG,CACzCuK,EAAI9K,EAAIO,IAAM4J,EAAOC,KAAKD,EAAOS,KAAKjM,EAAMgE,MAAM3C,IAAOmK,EAAOS,KAAKK,EAAEtI,MAAMpC,IACvF,CACA,CAEM,OAAOgC,EAAauI,EAAK,EAC/B,EAEInM,EAAM+B,IAAM,SAASuK,GAEnB,GAAItM,EAAM6D,YAAcyI,EAAEzI,YAAc,EAAG,CACzC,OAAO7D,CACf,CAEM,IAAI6L,EAAQL,EAAOS,KAAKjM,EAAMgE,MAAM,IAAOwH,EAAOS,KAAKK,EAAEtI,MAAM,IAE/D,IAAImI,EAAM,IAAI7L,MAAMN,EAAM6D,aAC1B,IAAK,IAAIxC,EAAI,EAAGA,EAAIrB,EAAM6D,YAAaxC,GAAK,EAAG,CAC7C8K,EAAI9K,GAAKrB,EAAMgE,MAAM3C,EAC7B,CAEM,IAAK,IAAIA,EAAI,EAAGA,EAAIiL,EAAEzI,YAAaxC,GAAK,EAAG,CACzC8K,EAAI9K,IAAMmK,EAAOC,KAAKD,EAAOS,KAAKK,EAAEtI,MAAM3C,IAAOwK,EACzD,CAGM,OAAOjI,EAAauI,EAAK,GAAGpK,IAAIuK,EACtC,EAEI,OAAOtM,CACX,CAME,IAAIoE,EAAY,WAEd,IAAImI,EAAiB,CAQnB,CAAC,EAAG,GAAI,IACR,CAAC,EAAG,GAAI,IACR,CAAC,EAAG,GAAI,IACR,CAAC,EAAG,GAAI,GAGR,CAAC,EAAG,GAAI,IACR,CAAC,EAAG,GAAI,IACR,CAAC,EAAG,GAAI,IACR,CAAC,EAAG,GAAI,IAGR,CAAC,EAAG,GAAI,IACR,CAAC,EAAG,GAAI,IACR,CAAC,EAAG,GAAI,IACR,CAAC,EAAG,GAAI,IAGR,CAAC,EAAG,IAAK,IACT,CAAC,EAAG,GAAI,IACR,CAAC,EAAG,GAAI,IACR,CAAC,EAAG,GAAI,GAGR,CAAC,EAAG,IAAK,KACT,CAAC,EAAG,GAAI,IACR,CAAC,EAAG,GAAI,GAAI,EAAG,GAAI,IACnB,CAAC,EAAG,GAAI,GAAI,EAAG,GAAI,IAGnB,CAAC,EAAG,GAAI,IACR,CAAC,EAAG,GAAI,IACR,CAAC,EAAG,GAAI,IACR,CAAC,EAAG,GAAI,IAGR,CAAC,EAAG,GAAI,IACR,CAAC,EAAG,GAAI,IACR,CAAC,EAAG,GAAI,GAAI,EAAG,GAAI,IACnB,CAAC,EAAG,GAAI,GAAI,EAAG,GAAI,IAGnB,CAAC,EAAG,IAAK,IACT,CAAC,EAAG,GAAI,GAAI,EAAG,GAAI,IACnB,CAAC,EAAG,GAAI,GAAI,EAAG,GAAI,IACnB,CAAC,EAAG,GAAI,GAAI,EAAG,GAAI,IAGnB,CAAC,EAAG,IAAK,KACT,CAAC,EAAG,GAAI,GAAI,EAAG,GAAI,IACnB,CAAC,EAAG,GAAI,GAAI,EAAG,GAAI,IACnB,CAAC,EAAG,GAAI,GAAI,EAAG,GAAI,IAGnB,CAAC,EAAG,GAAI,GAAI,EAAG,GAAI,IACnB,CAAC,EAAG,GAAI,GAAI,EAAG,GAAI,IACnB,CAAC,EAAG,GAAI,GAAI,EAAG,GAAI,IACnB,CAAC,EAAG,GAAI,GAAI,EAAG,GAAI,IAGnB,CAAC,EAAG,IAAK,IACT,CAAC,EAAG,GAAI,GAAI,EAAG,GAAI,IACnB,CAAC,EAAG,GAAI,GAAI,EAAG,GAAI,IACnB,CAAC,EAAG,GAAI,GAAI,EAAG,GAAI,IAGnB,CAAC,EAAG,IAAK,GAAI,EAAG,IAAK,IACrB,CAAC,EAAG,GAAI,GAAI,EAAG,GAAI,IACnB,CAAC,EAAG,GAAI,GAAI,EAAG,GAAI,IACnB,CAAC,EAAG,GAAI,GAAI,EAAG,GAAI,IAGnB,CAAC,EAAG,IAAK,KACT,CAAC,EAAG,GAAI,GAAI,EAAG,GAAI,IACnB,CAAC,EAAG,GAAI,GAAI,EAAG,GAAI,IACnB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IAGpB,CAAC,EAAG,IAAK,IAAK,EAAG,IAAK,KACtB,CAAC,EAAG,GAAI,GAAI,EAAG,GAAI,IACnB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IAGpB,CAAC,EAAG,IAAK,GAAI,EAAG,IAAK,IACrB,CAAC,EAAG,GAAI,GAAI,EAAG,GAAI,IACnB,CAAC,EAAG,GAAI,GAAI,EAAG,GAAI,IACnB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IAGpB,CAAC,EAAG,IAAK,GAAI,EAAG,IAAK,IACrB,CAAC,EAAG,GAAI,GAAI,EAAG,GAAI,IACnB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IAGpB,CAAC,EAAG,IAAK,IAAK,EAAG,IAAK,KACtB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IAGpB,CAAC,EAAG,IAAK,IAAK,EAAG,IAAK,KACtB,CAAC,EAAG,GAAI,GAAI,EAAG,GAAI,IACnB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IAGpB,CAAC,EAAG,IAAK,IAAK,EAAG,IAAK,KACtB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IAGpB,CAAC,EAAG,IAAK,IAAK,EAAG,IAAK,KACtB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAGrB,CAAC,EAAG,IAAK,IAAK,EAAG,IAAK,KACtB,CAAC,GAAI,GAAI,IACT,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IAGpB,CAAC,EAAG,IAAK,IAAK,EAAG,IAAK,KACtB,CAAC,GAAI,GAAI,IACT,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,GAAI,GAAI,IAGT,CAAC,EAAG,IAAK,IAAK,EAAG,IAAK,KACtB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAGrB,CAAC,EAAG,IAAK,IAAK,EAAG,IAAK,KACtB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IAGpB,CAAC,EAAG,IAAK,IAAK,EAAG,IAAK,KACtB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAGrB,CAAC,GAAI,IAAK,IAAK,EAAG,IAAK,KACvB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IAGpB,CAAC,EAAG,IAAK,IAAK,EAAG,IAAK,KACtB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAGrB,CAAC,EAAG,IAAK,IAAK,GAAI,IAAK,KACvB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAGrB,CAAC,EAAG,IAAK,IAAK,EAAG,IAAK,KACtB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAGrB,CAAC,EAAG,IAAK,IAAK,GAAI,IAAK,KACvB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAGrB,CAAC,GAAI,IAAK,IAAK,EAAG,IAAK,KACvB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAGrB,CAAC,GAAI,IAAK,KACV,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAGrB,CAAC,GAAI,IAAK,IAAK,EAAG,IAAK,KACvB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAGrB,CAAC,GAAI,IAAK,IAAK,EAAG,IAAK,KACvB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IAGpB,CAAC,GAAI,IAAK,IAAK,EAAG,IAAK,KACvB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAGrB,CAAC,EAAG,IAAK,IAAK,GAAI,IAAK,KACvB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IAGpB,CAAC,GAAI,IAAK,IAAK,EAAG,IAAK,KACvB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAGrB,CAAC,EAAG,IAAK,IAAK,GAAI,IAAK,KACvB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAGrB,CAAC,GAAI,IAAK,IAAK,EAAG,IAAK,KACvB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAGrB,CAAC,GAAI,IAAK,IAAK,EAAG,IAAK,KACvB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,KAGvB,IAAIC,EAAY,SAASlJ,EAAYF,GACnC,IAAIpD,EAAQ,GACZA,EAAMsD,WAAaA,EACnBtD,EAAMoD,UAAYA,EAClB,OAAOpD,CACb,EAEI,IAAIA,EAAQ,GAEZ,IAAIyM,EAAkB,SAASpN,EAAYC,GAEzC,OAAOA,GACP,KAAKK,EAAuBsK,EAC1B,OAAOsC,GAAgBlN,EAAa,GAAK,EAAI,GAC/C,KAAKM,EAAuBuK,EAC1B,OAAOqC,GAAgBlN,EAAa,GAAK,EAAI,GAC/C,KAAKM,EAAuBwK,EAC1B,OAAOoC,GAAgBlN,EAAa,GAAK,EAAI,GAC/C,KAAKM,EAAuByK,EAC1B,OAAOmC,GAAgBlN,EAAa,GAAK,EAAI,GAC/C,QACE,OAAOqN,UAEf,EAEI1M,EAAMqE,YAAc,SAAShF,EAAYC,GAEvC,IAAIqN,EAAUF,EAAgBpN,EAAYC,GAE1C,UAAWqN,GAAW,YAAa,CACjC,KAAM,6BAA+BtN,EACjC,yBAA2BC,CACvC,CAEM,IAAIqC,EAASgL,EAAQhL,OAAS,EAE9B,IAAIiL,EAAO,GAEX,IAAK,IAAIvL,EAAI,EAAGA,EAAIM,EAAQN,GAAK,EAAG,CAElC,IAAI6H,EAAQyD,EAAQtL,EAAI,EAAI,GAC5B,IAAIiC,EAAaqJ,EAAQtL,EAAI,EAAI,GACjC,IAAI+B,EAAYuJ,EAAQtL,EAAI,EAAI,GAEhC,IAAK,IAAIO,EAAI,EAAGA,EAAIsH,EAAOtH,GAAK,EAAG,CACjCgL,EAAKxH,KAAKoH,EAAUlJ,EAAYF,GAC1C,CACA,CAEM,OAAOwJ,CACb,EAEI,OAAO5M,CACX,CA/SkB,GAqThB,IAAIsE,EAAc,WAEhB,IAAIuI,EAAU,GACd,IAAIC,EAAU,EAEd,IAAI9M,EAAQ,GAEZA,EAAMwD,UAAY,WAChB,OAAOqJ,CACb,EAEI7M,EAAMgE,MAAQ,SAASE,GACrB,IAAI6I,EAAW/K,KAAKC,MAAMiC,EAAQ,GAClC,OAAU2I,EAAQE,KAAe,EAAI7I,EAAQ,EAAO,IAAM,CAChE,EAEIlE,EAAMuE,IAAM,SAAS4H,EAAKxK,GACxB,IAAK,IAAIN,EAAI,EAAGA,EAAIM,EAAQN,GAAK,EAAG,CAClCrB,EAAM4E,QAAWuH,IAASxK,EAASN,EAAI,EAAO,IAAM,EAC5D,CACA,EAEIrB,EAAMyE,gBAAkB,WACtB,OAAOqI,CACb,EAEI9M,EAAM4E,OAAS,SAASoI,GAEtB,IAAID,EAAW/K,KAAKC,MAAM6K,EAAU,GACpC,GAAID,EAAQlL,QAAUoL,EAAU,CAC9BF,EAAQzH,KAAK,EACrB,CAEM,GAAI4H,EAAK,CACPH,EAAQE,IAAc,MAAUD,EAAU,CAClD,CAEMA,GAAW,CACjB,EAEI,OAAO9M,CACX,EAME,IAAIgF,EAAW,SAAS9C,GAEtB,IAAI+K,EAAQrD,EAAOC,YACnB,IAAIqD,EAAQhL,EAEZ,IAAIlC,EAAQ,GAEZA,EAAMwE,QAAU,WACd,OAAOyI,CACb,EAEIjN,EAAM6D,UAAY,SAASjB,GACzB,OAAOsK,EAAMvL,MACnB,EAEI3B,EAAM0E,MAAQ,SAAS9B,GAErB,IAAIV,EAAOgL,EAEX,IAAI7L,EAAI,EAER,MAAOA,EAAI,EAAIa,EAAKP,OAAQ,CAC1BiB,EAAO2B,IAAI4I,EAASjL,EAAK0F,UAAUvG,EAAGA,EAAI,IAAM,IAChDA,GAAK,CACb,CAEM,GAAIA,EAAIa,EAAKP,OAAQ,CACnB,GAAIO,EAAKP,OAASN,GAAK,EAAG,CACxBuB,EAAO2B,IAAI4I,EAASjL,EAAK0F,UAAUvG,EAAGA,EAAI,IAAM,EAC1D,MAAe,GAAIa,EAAKP,OAASN,GAAK,EAAG,CAC/BuB,EAAO2B,IAAI4I,EAASjL,EAAK0F,UAAUvG,EAAGA,EAAI,IAAM,EAC1D,CACA,CACA,EAEI,IAAI8L,EAAW,SAASjG,GACtB,IAAIiF,EAAM,EACV,IAAK,IAAI9K,EAAI,EAAGA,EAAI6F,EAAEvF,OAAQN,GAAK,EAAG,CACpC8K,EAAMA,EAAM,GAAKiB,EAAUlG,EAAEE,OAAO/F,GAC5C,CACM,OAAO8K,CACb,EAEI,IAAIiB,EAAY,SAASnM,GACvB,GAAI,KAAOA,GAAKA,GAAK,IAAK,CACxB,OAAOA,EAAEuH,WAAW,GAAK,IAAIA,WAAW,EAChD,CACM,KAAM,iBAAmBvH,CAC/B,EAEI,OAAOjB,CACX,EAME,IAAIiF,EAAa,SAAS/C,GAExB,IAAI+K,EAAQrD,EAAOE,eACnB,IAAIoD,EAAQhL,EAEZ,IAAIlC,EAAQ,GAEZA,EAAMwE,QAAU,WACd,OAAOyI,CACb,EAEIjN,EAAM6D,UAAY,SAASjB,GACzB,OAAOsK,EAAMvL,MACnB,EAEI3B,EAAM0E,MAAQ,SAAS9B,GAErB,IAAIsE,EAAIgG,EAER,IAAI7L,EAAI,EAER,MAAOA,EAAI,EAAI6F,EAAEvF,OAAQ,CACvBiB,EAAO2B,IACL8I,EAAQnG,EAAEE,OAAO/F,IAAO,GACxBgM,EAAQnG,EAAEE,OAAO/F,EAAI,IAAM,IAC7BA,GAAK,CACb,CAEM,GAAIA,EAAI6F,EAAEvF,OAAQ,CAChBiB,EAAO2B,IAAI8I,EAAQnG,EAAEE,OAAO/F,IAAM,EAC1C,CACA,EAEI,IAAIgM,EAAU,SAASpM,GAErB,GAAI,KAAOA,GAAKA,GAAK,IAAK,CACxB,OAAOA,EAAEuH,WAAW,GAAK,IAAIA,WAAW,EAChD,MAAa,GAAI,KAAOvH,GAAKA,GAAK,IAAK,CAC/B,OAAOA,EAAEuH,WAAW,GAAK,IAAIA,WAAW,GAAK,EACrD,KAAa,CACL,OAAQvH,GACR,IAAK,IAAM,OAAO,GAClB,IAAK,IAAM,OAAO,GAClB,IAAK,IAAM,OAAO,GAClB,IAAK,IAAM,OAAO,GAClB,IAAK,IAAM,OAAO,GAClB,IAAK,IAAM,OAAO,GAClB,IAAK,IAAM,OAAO,GAClB,IAAK,IAAM,OAAO,GAClB,IAAK,IAAM,OAAO,GAClB,QACE,KAAM,iBAAmBA,EAEnC,CACA,EAEI,OAAOjB,CACX,EAME,IAAIkF,EAAa,SAAShD,GAExB,IAAI+K,EAAQrD,EAAOG,eAEnB,IAAIuD,EAASlO,EAAOqJ,cAAcvG,GAElC,IAAIlC,EAAQ,GAEZA,EAAMwE,QAAU,WACd,OAAOyI,CACb,EAEIjN,EAAM6D,UAAY,SAASjB,GACzB,OAAO0K,EAAO3L,MACpB,EAEI3B,EAAM0E,MAAQ,SAAS9B,GACrB,IAAK,IAAIvB,EAAI,EAAGA,EAAIiM,EAAO3L,OAAQN,GAAK,EAAG,CACzCuB,EAAO2B,IAAI+I,EAAOjM,GAAI,EAC9B,CACA,EAEI,OAAOrB,CACX,EAME,IAAImF,EAAU,SAASjD,GAErB,IAAI+K,EAAQrD,EAAOI,WAGnB,IAAIvB,EAAgBrJ,EAAOiJ,mBAAmB,QAC9C,IAAKI,EAAe,CAClB,KAAM,qBACZ,EACK,SAASxH,EAAGsM,GAEX,IAAIrN,EAAOuI,EAAcxH,GACzB,GAAIf,EAAKyB,QAAU,IAAQzB,EAAK,IAAM,EAAKA,EAAK,KAAOqN,EAAM,CAC3D,KAAM,qBACd,CACA,CANK,CAMC,IAAU,OAEZ,IAAID,EAAS7E,EAAcvG,GAE3B,IAAIlC,EAAQ,GAEZA,EAAMwE,QAAU,WACd,OAAOyI,CACb,EAEIjN,EAAM6D,UAAY,SAASjB,GACzB,SAAU0K,EAAO3L,OAAS,EAChC,EAEI3B,EAAM0E,MAAQ,SAAS9B,GAErB,IAAIV,EAAOoL,EAEX,IAAIjM,EAAI,EAER,MAAOA,EAAI,EAAIa,EAAKP,OAAQ,CAE1B,IAAIV,GAAO,IAAOiB,EAAKb,KAAO,EAAM,IAAOa,EAAKb,EAAI,GAEpD,GAAI,OAAUJ,GAAKA,GAAK,MAAQ,CAC9BA,GAAK,KACf,MAAe,GAAI,OAAUA,GAAKA,GAAK,MAAQ,CACrCA,GAAK,KACf,KAAe,CACL,KAAM,oBAAsBI,EAAI,GAAK,IAAMJ,CACrD,CAEQA,GAAOA,IAAM,EAAK,KAAQ,KAAQA,EAAI,KAEtC2B,EAAO2B,IAAItD,EAAG,IAEdI,GAAK,CACb,CAEM,GAAIA,EAAIa,EAAKP,OAAQ,CACnB,KAAM,oBAAsBN,EAAI,EACxC,CACA,EAEI,OAAOrB,CACX,EAUE,IAAIwN,EAAwB,WAE1B,IAAIF,EAAS,GAEb,IAAItN,EAAQ,GAEZA,EAAMyN,UAAY,SAASxE,GACzBqE,EAAOlI,KAAK6D,EAAI,IACtB,EAEIjJ,EAAM0N,WAAa,SAASrM,GAC1BrB,EAAMyN,UAAUpM,GAChBrB,EAAMyN,UAAUpM,IAAM,EAC5B,EAEIrB,EAAM2N,WAAa,SAAS1E,EAAG2E,EAAKC,GAClCD,EAAMA,GAAO,EACbC,EAAMA,GAAO5E,EAAEtH,OACf,IAAK,IAAIN,EAAI,EAAGA,EAAIwM,EAAKxM,GAAK,EAAG,CAC/BrB,EAAMyN,UAAUxE,EAAE5H,EAAIuM,GAC9B,CACA,EAEI5N,EAAM8N,YAAc,SAAS5G,GAC3B,IAAK,IAAI7F,EAAI,EAAGA,EAAI6F,EAAEvF,OAAQN,GAAK,EAAG,CACpCrB,EAAMyN,UAAUvG,EAAEsB,WAAWnH,GACrC,CACA,EAEIrB,EAAM+N,YAAc,WAClB,OAAOT,CACb,EAEItN,EAAMgO,SAAW,WACf,IAAI9G,EAAI,GACRA,GAAK,IACL,IAAK,IAAI7F,EAAI,EAAGA,EAAIiM,EAAO3L,OAAQN,GAAK,EAAG,CACzC,GAAIA,EAAI,EAAG,CACT6F,GAAK,GACf,CACQA,GAAKoG,EAAOjM,EACpB,CACM6F,GAAK,IACL,OAAOA,CACb,EAEI,OAAOlH,CACX,EAME,IAAIiO,EAA2B,WAE7B,IAAIpB,EAAU,EACd,IAAIqB,EAAU,EACd,IAAIpB,EAAU,EACd,IAAIqB,EAAU,GAEd,IAAInO,EAAQ,GAEZ,IAAIoO,EAAe,SAASnF,GAC1BkF,GAAW3E,OAAOC,aAAa4E,EAAOpF,EAAI,IAChD,EAEI,IAAIoF,EAAS,SAASnC,GACpB,GAAIA,EAAI,QAED,GAAIA,EAAI,GAAI,CACjB,OAAO,GAAOA,CACtB,MAAa,GAAIA,EAAI,GAAI,CACjB,OAAO,IAAQA,EAAI,GAC3B,MAAa,GAAIA,EAAI,GAAI,CACjB,OAAO,IAAQA,EAAI,GAC3B,MAAa,GAAIA,GAAK,GAAI,CAClB,OAAO,EACf,MAAa,GAAIA,GAAK,GAAI,CAClB,OAAO,EACf,CACM,KAAM,KAAOA,CACnB,EAEIlM,EAAMyN,UAAY,SAASvB,GAEzBW,EAAWA,GAAW,EAAMX,EAAI,IAChCgC,GAAW,EACXpB,GAAW,EAEX,MAAOoB,GAAW,EAAG,CACnBE,EAAavB,IAAaqB,EAAU,GACpCA,GAAW,CACnB,CACA,EAEIlO,EAAMsO,MAAQ,WAEZ,GAAIJ,EAAU,EAAG,CACfE,EAAavB,GAAY,EAAIqB,GAC7BrB,EAAU,EACVqB,EAAU,CAClB,CAEM,GAAIpB,EAAU,GAAK,EAAG,CAEpB,IAAIyB,EAAS,EAAIzB,EAAU,EAC3B,IAAK,IAAIzL,EAAI,EAAGA,EAAIkN,EAAQlN,GAAK,EAAG,CAClC8M,GAAW,GACrB,CACA,CACA,EAEInO,EAAMgO,SAAW,WACf,OAAOG,CACb,EAEI,OAAOnO,CACX,EAME,IAAI+I,EAA0B,SAASyF,GAErC,IAAIC,EAAOD,EACX,IAAIE,EAAO,EACX,IAAI7B,EAAU,EACd,IAAIqB,EAAU,EAEd,IAAIlO,EAAQ,GAEZA,EAAMgJ,KAAO,WAEX,MAAOkF,EAAU,EAAG,CAElB,GAAIQ,GAAQD,EAAK9M,OAAQ,CACvB,GAAIuM,GAAW,EAAG,CAChB,OAAQ,CACpB,CACU,KAAM,2BAA6BA,CAC7C,CAEQ,IAAIjN,EAAIwN,EAAKrH,OAAOsH,GACpBA,GAAQ,EAER,GAAIzN,GAAK,IAAK,CACZiN,EAAU,EACV,OAAQ,CAClB,MAAe,GAAIjN,EAAE0N,MAAM,QAAU,CAE3B,QACV,CAEQ9B,EAAWA,GAAW,EAAK+B,EAAO3N,EAAEuH,WAAW,IAC/C0F,GAAW,CACnB,CAEM,IAAIhC,EAAKW,IAAaqB,EAAU,EAAO,IACvCA,GAAW,EACX,OAAOhC,CACb,EAEI,IAAI0C,EAAS,SAAS3N,GACpB,GAAI,IAAQA,GAAKA,GAAK,GAAM,CAC1B,OAAOA,EAAI,EACnB,MAAa,GAAI,IAAQA,GAAKA,GAAK,IAAM,CACjC,OAAOA,EAAI,GAAO,EAC1B,MAAa,GAAI,IAAQA,GAAKA,GAAK,GAAM,CACjC,OAAOA,EAAI,GAAO,EAC1B,MAAa,GAAIA,GAAK,GAAM,CACpB,OAAO,EACf,MAAa,GAAIA,GAAK,GAAM,CACpB,OAAO,EACf,KAAa,CACL,KAAM,KAAOA,CACrB,CACA,EAEI,OAAOjB,CACX,EAME,IAAI6O,EAAW,SAASC,EAAOC,GAE7B,IAAIC,EAASF,EACb,IAAIG,EAAUF,EACd,IAAI7B,EAAQ,IAAI5M,MAAMwO,EAAQC,GAE9B,IAAI/O,EAAQ,GAEZA,EAAMkP,SAAW,SAASpI,EAAGC,EAAGoI,GAC9BjC,EAAMnG,EAAIiI,EAASlI,GAAKqI,CAC9B,EAEInP,EAAM0E,MAAQ,SAAS0K,GAKrBA,EAAItB,YAAY,UAKhBsB,EAAI1B,WAAWsB,GACfI,EAAI1B,WAAWuB,GAEfG,EAAI3B,UAAU,KACd2B,EAAI3B,UAAU,GACd2B,EAAI3B,UAAU,GAMd2B,EAAI3B,UAAU,GACd2B,EAAI3B,UAAU,GACd2B,EAAI3B,UAAU,GAGd2B,EAAI3B,UAAU,KACd2B,EAAI3B,UAAU,KACd2B,EAAI3B,UAAU,KAKd2B,EAAItB,YAAY,KAChBsB,EAAI1B,WAAW,GACf0B,EAAI1B,WAAW,GACf0B,EAAI1B,WAAWsB,GACfI,EAAI1B,WAAWuB,GACfG,EAAI3B,UAAU,GAQd,IAAI4B,EAAiB,EACrB,IAAIC,EAASC,EAAaF,GAE1BD,EAAI3B,UAAU4B,GAEd,IAAIvM,EAAS,EAEb,MAAOwM,EAAO3N,OAASmB,EAAS,IAAK,CACnCsM,EAAI3B,UAAU,KACd2B,EAAIzB,WAAW2B,EAAQxM,EAAQ,KAC/BA,GAAU,GAClB,CAEMsM,EAAI3B,UAAU6B,EAAO3N,OAASmB,GAC9BsM,EAAIzB,WAAW2B,EAAQxM,EAAQwM,EAAO3N,OAASmB,GAC/CsM,EAAI3B,UAAU,GAId2B,EAAItB,YAAY,IACtB,EAEI,IAAI0B,EAAkB,SAASJ,GAE7B,IAAIK,EAAOL,EACX,IAAIM,EAAa,EACjB,IAAIC,EAAa,EAEjB,IAAI3P,EAAQ,GAEZA,EAAM0E,MAAQ,SAASxC,EAAMP,GAE3B,GAAMO,IAASP,GAAW,EAAG,CAC3B,KAAM,aAChB,CAEQ,MAAO+N,EAAa/N,GAAU,EAAG,CAC/B8N,EAAKhC,UAAU,KAAUvL,GAAQwN,EAAcC,IAC/ChO,GAAW,EAAI+N,EACfxN,KAAW,EAAIwN,EACfC,EAAa,EACbD,EAAa,CACvB,CAEQC,EAAczN,GAAQwN,EAAcC,EACpCD,EAAaA,EAAa/N,CAClC,EAEM3B,EAAMsO,MAAQ,WACZ,GAAIoB,EAAa,EAAG,CAClBD,EAAKhC,UAAUkC,EACzB,CACA,EAEM,OAAO3P,CACb,EAEI,IAAIuP,EAAe,SAASF,GAE1B,IAAIO,EAAY,GAAKP,EACrB,IAAIQ,GAAW,GAAKR,GAAkB,EACtC,IAAIS,EAAYT,EAAiB,EAGjC,IAAIU,EAAQC,IAEZ,IAAK,IAAI3O,EAAI,EAAGA,EAAIuO,EAAWvO,GAAK,EAAG,CACrC0O,EAAME,IAAIzG,OAAOC,aAAapI,GACtC,CACM0O,EAAME,IAAIzG,OAAOC,aAAamG,IAC9BG,EAAME,IAAIzG,OAAOC,aAAaoG,IAE9B,IAAIK,EAAU1C,IACd,IAAI2C,EAASX,EAAgBU,GAG7BC,EAAOzL,MAAMkL,EAAWE,GAExB,IAAIM,EAAY,EAEhB,IAAIlJ,EAAIsC,OAAOC,aAAayD,EAAMkD,IAClCA,GAAa,EAEb,MAAOA,EAAYlD,EAAMvL,OAAQ,CAE/B,IAAIV,EAAIuI,OAAOC,aAAayD,EAAMkD,IAClCA,GAAa,EAEb,GAAIL,EAAMM,SAASnJ,EAAIjG,GAAK,CAE1BiG,EAAIA,EAAIjG,CAElB,KAAe,CAELkP,EAAOzL,MAAMqL,EAAMO,QAAQpJ,GAAI4I,GAE/B,GAAIC,EAAM5J,OAAS,KAAO,CAExB,GAAI4J,EAAM5J,QAAW,GAAK2J,EAAa,CACrCA,GAAa,CAC3B,CAEYC,EAAME,IAAI/I,EAAIjG,EAC1B,CAEUiG,EAAIjG,CACd,CACA,CAEMkP,EAAOzL,MAAMqL,EAAMO,QAAQpJ,GAAI4I,GAG/BK,EAAOzL,MAAMmL,EAASC,GAEtBK,EAAO7B,QAEP,OAAO4B,EAAQnC,aACrB,EAEI,IAAIiC,EAAW,WAEb,IAAIO,EAAO,GACX,IAAIC,EAAQ,EAEZ,IAAIxQ,EAAQ,GAEZA,EAAMiQ,IAAM,SAASQ,GACnB,GAAIzQ,EAAMqQ,SAASI,GAAO,CACxB,KAAM,WAAaA,CAC7B,CACQF,EAAKE,GAAOD,EACZA,GAAS,CACjB,EAEMxQ,EAAMmG,KAAO,WACX,OAAOqK,CACf,EAEMxQ,EAAMsQ,QAAU,SAASG,GACvB,OAAOF,EAAKE,EACpB,EAEMzQ,EAAMqQ,SAAW,SAASI,GACxB,cAAcF,EAAKE,IAAQ,WACnC,EAEM,OAAOzQ,CACb,EAEI,OAAOA,CACX,EAEE,IAAI4G,EAAgB,SAASkI,EAAOC,EAAQ2B,GAC1C,IAAIC,EAAM9B,EAASC,EAAOC,GAC1B,IAAK,IAAIhI,EAAI,EAAGA,EAAIgI,EAAQhI,GAAK,EAAG,CAClC,IAAK,IAAID,EAAI,EAAGA,EAAIgI,EAAOhI,GAAK,EAAG,CACjC6J,EAAIzB,SAASpI,EAAGC,EAAG2J,EAAS5J,EAAGC,GACvC,CACA,CAEI,IAAIkC,EAAIuE,IACRmD,EAAIjM,MAAMuE,GAEV,IAAI2H,EAAS3C,IACb,IAAI1F,EAAQU,EAAE8E,cACd,IAAK,IAAI1M,EAAI,EAAGA,EAAIkH,EAAM5G,OAAQN,GAAK,EAAG,CACxCuP,EAAOnD,UAAUlF,EAAMlH,GAC7B,CACIuP,EAAOtC,QAEP,MAAO,yBAA2BsC,CACtC,EAKE,OAAOxR,CACT,CArrEa,IAwrEZ,WAECA,EAAOiJ,mBAAmB,SAAW,SAASnB,GAE5C,SAAS2J,EAAYrC,GACnB,IAAIsC,EAAO,GACX,IAAK,IAAIzP,EAAE,EAAGA,EAAImN,EAAI7M,OAAQN,IAAK,CACjC,IAAI0P,EAAWvC,EAAIhG,WAAWnH,GAC9B,GAAI0P,EAAW,IAAMD,EAAK1L,KAAK2L,QAC1B,GAAIA,EAAW,KAAO,CACzBD,EAAK1L,KAAK,IAAQ2L,GAAY,EAC1B,IAAQA,EAAW,GACjC,MACa,GAAIA,EAAW,OAAUA,GAAY,MAAQ,CAChDD,EAAK1L,KAAK,IAAQ2L,GAAY,GAC1B,IAASA,GAAU,EAAK,GACxB,IAAQA,EAAW,GACjC,KAEa,CACH1P,IAIA0P,EAAW,QAAaA,EAAW,OAAQ,GACtCvC,EAAIhG,WAAWnH,GAAK,MACzByP,EAAK1L,KAAK,IAAQ2L,GAAW,GACzB,IAASA,GAAU,GAAM,GACzB,IAASA,GAAU,EAAK,GACxB,IAAQA,EAAW,GACjC,CACA,CACM,OAAOD,CACb,CACI,OAAOD,EAAY3J,EACvB,CAEA,CArCC,IAuCA,SAAU8J,GAG+B,CACpCC,EAAAC,QAAiBF,GACvB,CACA,EANA,EAME,WACE,OAAO5R,CACX,G,wBCvvEA,IAAY+R,GAAZ,SAAYA,GACVA,EAAA,qBACAA,EAAA,aACAA,EAAA,gBACD,EAJD,CAAYA,MAAU,KAMtB,IAAYC,GAAZ,SAAYA,GACVA,EAAA,WACAA,EAAA,cACAA,EAAA,eACAA,EAAA,WACD,EALD,CAAYA,MAAoB,KCPhC,MAAMC,EAAY,mNAClB,MAAAC,EAAeD,ECYf,SAASE,EAAgBC,EAAuBC,EAAwBC,GACtE,MAAMC,EAAsBD,EAAaE,QAAQ,IAAK,IAAIJ,MAAkBC,EAAeG,QAAQ,IAAI,WACvG,OAAOD,CACT,C,MAOaE,EAAkB,M,uCACF,c,0BAC0BT,EAAqBU,K,YACjD,E,WACD,E,eACI,Y,gBACC,Y,gBAEIX,EAAWY,Q,oBAI5C,iBAAAC,GACEC,KAAKC,kBAAkBD,KAAKE,SAAUF,KAAKG,W,CAG7C,iBAAAF,CAAkBjM,EAAcmM,GAC9B,MAAMC,EAAajT,EAAO,EAAG6S,KAAK3S,sBAClC+S,EAAGxN,QAAQoB,GACXoM,EAAG9M,OAEH,GAAI6M,IAAe,UAAW,CAC5BH,KAAK/P,KAAOmQ,EAAGrL,eACfiL,KAAK/P,KAAOqP,EAAgB,MAAO,qBAAuBtL,EAAMgM,KAAK/P,K,MAChE,GAAIkQ,IAAe,MAAO,CAC/BH,KAAK/P,KAAOmQ,EAAGzM,c,MACV,GAAIwM,IAAe,QAAS,CACjCH,KAAK/P,KAAOmQ,EAAG7M,gB,KACV,CACLyM,KAAK/P,KAAO,I,EAKhB,uBAAAoQ,CAAwBC,GACtBN,KAAKC,kBAAkBD,KAAKE,SAAUI,E,CAIxC,qBAAAC,CAAsBD,GACpBE,QAAQC,IAAI,mBAAoBH,GAChCN,KAAKC,kBAAkBK,EAAUN,KAAKG,W,CAGxC,iCAAAO,GACEV,KAAKC,kBAAkBD,KAAKE,SAAUF,KAAKG,W,CAG7C,MAAAQ,GAEE,OAAOC,EAAA,OAAApC,IAAA,2CAAKqC,UAAWb,KAAK/P,M","ignoreList":[]}